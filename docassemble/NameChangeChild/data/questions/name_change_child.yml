metadata:
  title: Name change for a child
  short title: Child name change
  comment: This program makes the forms to ask the court to change the names of minor children.
  authors:
    - Vivian McNaughton
    - Matt Newsted
---
include:
  - docassemble.AssemblyLine:assembly_line.yml
  - docassemble.ALToolbox:phone-number-validation.yml
  - docassemble.ILAO:ilao-interview-framework.yml
  - docassemble.ILAO:shared-basic-questions.yml
---
objects:
  - users: ALPeopleList.using(there_are_any=True)
  - children: ALPeopleList.using(there_are_any=True, object_type=ALIndividual, complete_attribute=['complete'])
  - children[i].new: ALIndividual
  #- children[i].other_parent: ALIndividual
  #- children[i].third_parent_guardian: ALIndividual
  #- children[i].custody_haver: ALIndividual
  - children[i].parents: ALPeopleList.using(there_are_any=True, object_type=ALIndividual, complete_attribute=['complete'])
  - children[i].birth_place: ALAddress
  #parent_list_generator exists as an list to collect any parents/guardians/custodians of the children who require notice. If a a parent/guardian/custodian does not agree to the name change and the user does not think it is an issue to notify them, they should be added to this list.
  - parent_list_generator: ALPeopleList.using(there_are_any=True, object_Type=ALIndividual, there_is_another=False)
  - children[i].convictions: DAList.using(object_type=Thing, there_are_any=True)
  - court_list: ALCourtLoader.using(file_name='docassemble.ILAO:data/sources/il_courts.xlsx')
  - orders: DAList.using(object_type=Thing, complete_attribute='complete', there_are_any=True)
---
# Road map
sections:
  - section_intro: Start
  - section_user: Your information
  - section_children: Children and parents
  - section_filing: Filing information
  - section_download: Download
---
code: |
  ilao_easy_form_title = "Name change for a child"
  ilao_easy_form_url = "https://www.illinoislegalaid.org/legal-information/name-change-child"
  github_user = 'IllinoisLegalAidOnline'
  github_repo_name = 'docassemble-NameChangeChild'
  allowed_courts = ['Circuit']
---
# interview order block
mandatory: True
code: |
  interview_type = "child"
  nav.set_section('section_intro')
  sees_nav_bar
  set_progress(5)
  how_to_use
  accept_terms
  
  if user_is_adult == False:
    not_an_adult_kickout
  if six_months_in_illinois == False:
    not_enough_illinois_kickout
  
    
    
  nav.set_section('section_user')
  if time_in_illinois.years < 0.5:
    not_enough_illinois_kickout
  set_progress(20)
  users[0].name.first
  use_safe_address
  users[0].address.address
 
  users[0].has_email_address
    
  nav.set_section('section_children')
  set_progress(40)
  children.gather()
  waiver_reason_logic
  set_progress(60)
  if any_risk == True:
    if waiver_reason['order'] == True:
      if protective_order.any_true():
        order_against_parents
        orders.gather()
    if waiver_reason['hardship'] == True:
      hardship_text
  elif child_notice_would_be_published == True and any_risk == False:
    if request_waiver == True:
      if waiver_reason['order'] == True:
        if protective_order.any_true():
          order_against_parents
          orders.gather()
      if waiver_reason['hardship'] == True:
        hardship_text
    
  
  
  nav.set_section('section_filing')
  set_progress(80)
  filing_county
  #if trial_court_index == -1 and child_notice_would_be_published == True and (any_risk == False or request_waiver == False):
  #  cook_district
  #if child_notice_would_be_published == True and any_risk == False and request_waiver == False:
  #  courthouse_info
  e_signature
  
  
  if any_to_notify == True:
    notice_reminder
  set_progress(100)
  nav.set_section('section_download')
  #enabled_enabler
  
  get_docs_screen
---
#Gather loop for children list
code: |
  children[i].name.first
  children[i].new.name.first
  if children[i].age_in_years() >= 18:
    children[i].too_old
  else:
    if children[i].user_relationship == "other":
      not_parent_or_guardian_kickout
    else:
      if children[i].user_relationship == "guardian":
        children[i].guardian_docs
      #The criminal history questions can be found in the shared yml (although as of Jan 19 2024 they are in this yml as well)
      children[i].criminal_history_intro
      children[i].pending_arrests
      children[i].pending_charges
      children[i].misdemeanors
      children[i].felonies
      children[i].registry
      if children[i].registry and children[i].registry_exceptions.all_false():
        registry_kickout
      elif children[i].registry:
        registry_notification
      children[i].id_theft
      if children[i].felonies or children[i].registry or children[i].id_theft:
        children[i].conviction_intro
  	    children[i].convictions.gather()

      children[i].change_reasons
  
      children[i].birth_place.in_america
      if use_safe_address == True:
        if children[i].use_safe_address == False:
          children[i].address.address
      else:
        children[i].use_safe_address = False
        children[i].address.address
    
    #The way the forms are designed, they allow for a given child to have, in addition to the user, one other parent, one other guardian, and one other custodian. As such, the current program only allows for a the parents list associated with a given child to have 3 entries: 0 for parent, 1 for guardian, and 2 for custodian. Pending SME review, this may be retooled to allow for over 3 parental units per child. Why does this code code block go through each parents[i] individually instead of looping them? Because the program wants to keep a given parent type associated with a specific index. This probably could be done more efficiently with a loop, but I foolishly didn't set it up that way.
      #if children[i].include_other_parent == True: 
      #  children[i].parents[0].name.first
        
      if children[i].any_other_parents == True:
        about_other_parentals
        children[i].parents.gather()
        #All parentals are listed in the child information sheet--and all but the first get an additional parent sheet--but they appear on different templates depending on whether they agree to the name change, whether the user knows their address, and whether the user thinks the parental would pose a safety risk if they knew of the name change. Additionally, there is a later variable outside this gather loop that asks if published notice would pose a risk to the user's children.
        #If a parental agrees to the name change, they should only appear on the child information sheet.
        #If a parental does not agree to the name change, the user knows their address, and the user does not think they would pose a risk, they should appear on a notice of court date form. 
        #if children[i].parents[0].agree == True: 
        #  children[i].parents[0].notarized_signature
        #if children[i].parents[0].address_known == True:
        #  children[i].parents[0].address.address
        #if children[i].parents[0].agree != True:
        #  children[i].parents[0].notice_waiver_info  
        #  if children[i].parents[0].risk_check == False:
        #    if children[i].parents[0].address_known == True:
        #      children[i].parents[0].receive_method 
        #  if children[i].parents[0].agree != True and children[i].parents[0].address_known == False and children[i].parents[0].risk_check == False:
        #    children[i].parents[0].published_notice_info 
        #  elif children[i].parents[0].agree != True and children[i].parents[0].address_known == True and children[i].parents[0].risk_check == False and children[i].parents[0].receive_method == "newspaper":
        #    children[i].parents[0].published_notice_info 
        #
      #if children[i].include_third_parent_guardian == True: 
        #children[i].parents[1].name.first
        #if children[i].parents[1].agree == True: 
        #  children[i].parents[1].notarized_signature
        #if children[i].parents[1].address_known == True:
        #  children[i].parents[1].address.address
        #if children[i].parents[1].agree != True:
        #  children[i].parents[1].notice_waiver_info  
        #  if children[i].parents[1].risk_check == False:
        #    if children[i].parents[1].address_known == True:
        #      children[i].parents[1].receive_method 
        #if children[i].parents[1].agree != True and children[i].parents[1].address_known == False and children[i].parents[1].risk_check == False:
        #  children[i].parents[1].published_notice_info 
        #elif children[i].parents[1].agree != True and children[i].parents[1].address_known == True and children[i].parents[1].risk_check == False and children[i].parents[1].receive_method == "newspaper":
        #    children[i].parents[1].published_notice_info 
   #
      #if children[i].include_custody_haver == True:
      #  children[i].parents[2].name.first
      #  if children[i].parents[2].agree == True: 
      #    children[i].parents[2].notarized_signature
      #  if children[i].parents[2].address_known == True:
      #    children[i].parents[2].address.address
      #  if children[i].parents[2].agree != True:
      #    children[i].parents[2].notice_waiver_info  
      #    if children[i].parents[2].risk_check == False:
      #      if children[i].parents[2].address_known == True:
      #        children[i].parents[2].receive_method 
      #  if children[i].parents[2].agree != True and children[i].parents[2].address_known == False and children[i].parents[2].risk_check == False:
      #    children[i].parents[2].published_notice_info 
      #  elif children[i].parents[2].agree != True and children[i].parents[2].address_known == True and children[i].parents[2].risk_check == False and children[i].parents[2].receive_method == "newspaper":
      #      children[i].parents[2].published_notice_info 
            
   #Between the name change request form and the additional children form, there are space for 12 children. 
  if i == 11:
    children.there_is_another = False
  children[i].complete = True        
---
#gather parent gather list
code: |
  if children[i].any_other_parents == True:
    children[i].parents[j].name.first
    children[i].parents[j].parent_type
    if children[i].parents[j].agree == True: 
      children[i].parents[j].notarized_signature
    if children[i].parents[j].address_known == True:
      children[i].parents[j].address.address
    if children[i].parents[j].agree != True:
      children[i].parents[j].notice_waiver_info  
      if children[i].parents[j].risk_check == False:
        if children[i].parents[j].address_known == True:
          children[i].parents[j].receive_method 
      if children[i].parents[j].agree != True and children[i].parents[j].address_known == False and children[i].parents[j].risk_check == False:
        children[i].parents[j].published_notice_info 
      #elif children[i].parents[j].agree != True and children[i].parents[j].address_known == True and children[i].parents[j].risk_check == False and children[i].parents[j].receive_method == "newspaper":
        #children[i].parents[j].published_notice_info 
  else:
    children[i].parents.there_is_another = False
  children[i].parents[j].complete = True
---
#Used to calculate the amount of time the user has been living in Illinois, which needs to be 6 months or more.
depends on:
  - started_living_in_illinois
code: |
  time_in_illinois = date_difference(starting=started_living_in_illinois, ending=today())
---
id: welcome
question: |
  Name change for a child
subquestion: |
  Welcome to Illinois Legal Aid Online's **Name change for a child** Easy Form.

  This program helps you prepare court forms to change the name of minor children.
  
  The forms you create can only be used in Illinois.
field: sees_nav_bar
---
id: instructions
continue button field: how_to_use
question: |
  Instructions
subquestion: |
  Set aside 20 to 30 minutes to finish this program. You can log in and save your work to return to later. 

  After you download your forms, you will need to sign it and send it to the court.
  
  ${ collapse_template(help_example) }  

  Click on **{green words}** to learn what they mean. Some pages have a question mark in a circle ${ fa_icon("question-circle", color_css="#0dcaf0" ) } that helps explain things.
---
template: help_example

subject: |

  **You can click sections like this to show more information.**

content: |  

  This is an example of help. Click again to hide.
---
template: get_legal_help
subject: |
  **What if I need legal advice?**
content: |  
  If you have questions or concerns about your legal problem and want legal advice you should talk to a lawyer.
 
  Use [**Get Legal Help**](https://www.illinoislegalaid.org/get-legal-help) to find free or low-cost legal services in your area.
---
id: user age check
question: |
  Are you 18 years old or older?
fields:
  - no label: user_is_adult
    datatype: yesnoradio
---
id: too young kickout
event: not_an_adult_kickout
question: |
  Sorry
subquestion: |
  Sorry, but you must be at least 18 years old to request a name change for a minor.
  
  If you are a minor and you do not have a parent or guardian to request a name change for you, you may want to [**Get Legal Help**]("https://www.illinoislegalaid.org/get-legal-help").
buttons:
  - Exit: exit
  - Restart: restart
---
id: six months in illinois
question: |
  Have you lived continuously in Illinois for at least 6 months?
subquestion: |
  ${collapse_template(live_continuously)}
fields:
  - no label: six_months_in_illinois
    datatype: yesnoradio
---
template: live_continuously
subject: |
  **What does "lived continuously" mean?** 
content: |
  "Lived continuously" means that you have lived in Illinois without taking a break to live in another state or country.
---
id: not enough time in illinois
event: not_enough_illinois_kickout
question: |
  Sorry
subquestion: |
  You must have lived continuously in Illinois for at least 6 months to use this program.
  
  You can use the [**Legal Services Corporation website**](https://www.lsc.gov/about-lsc/what-legal-aid/get-legal-help) to find a legal aid organization in another state. Or you can use **[Get Legal Help](https://www.illinoislegalaid.org/get-legal-help)** to find free or low-cost legal services in your area.
buttons:
  - Exit: exit
  - Restart: restart
---
id: time in illinois
question: |
  When did you start living in Illinois?
fields:
  - Date: started_living_in_illinois
    datatype: ThreePartsDate
    alMax: ${today()}
---
id: hide address
question: |
  Do you want to keep your address hidden?
subquestion: |
  You do not need to list your address on your court papers if this would put you or your household at risk.
  
  You can use an address where you can receive court notices instead.
fields:
  - no label: use_safe_address
    datatype: yesnoradio
---
id: user address
question: |
  % if use_safe_address == False:
  What is your mailing address?
  % else:
  What is your home address?
  % endif
subquestion: |
  % if use_safe_address:
  **This address will appear on your court papers.** You may receive court notices and documents about your case at this address.
  % else:
  **This address will appear on your court papers.** If you do not want this, click **Back** to keep your address hidden.
  % endif
fields:
  - Street address: users[0].address.address
    address autocomplete: True
  - Address line 2: users[0].address.unit
    required: False
  - City: users[0].address.city
  - State: users[0].address.state
    code: |
      states_list() 
  - ZIP code: users[0].address.zip
---
id: child name
question: |
  % if i == 0:
  What is the child's current name?
  % else:
  What is the ${ordinal(i)} child's current name?
  % endif
subquestion: |
  This is usually what is listed on their birth certificate.
  % if i == 0:
  
  If you want to change the name of multiple children, you will be able to enter the other children's information on later screens.
  % endif
fields:
  - First: children[i].name.first
  - Middle: children[i].name.middle
    required: False
  - Last: children[i].name.last
  - Suffix: children[i].name.suffix
    code: |
      name_suffix()
    required: False 
---
id: child birth date
question: |
  When was ${children[i].new.name.full(middle='full')} (AKA ${children[i].name.full(middle='full')}) born?
subquestion: |
  This program can only change the name of a child under the age of 18. To make name change forms for an adult, use ILAO's [**Name change for an adult easy form**](www.illinoislegalaid.org/node/36321).
fields:
  - Birth date: children[i].birthdate
    datatype: ThreePartsDate
    alMax: ${today().format("yyyy-MM-dd")}
    alMin: ${today().minus(years=18).format("yyyy-MM-dd")}
---
id: child too old
continue button field: children[i].too_old
question: |
  Sorry
subquestion: |
  ${children[i].new.name.full(middle='full')} (AKA ${children[i].name.full(middle='full')}) is an adult. If they want to change their name, they will have to do so their self. To make name change forms for an adult, use ILAO's [**Name change for an adult easy form**](www.illinoislegalaid.org/node/36321).

  If you have another child whose name you would like to change, click **Next**.
---
id: child user relationship
question: |
  What is your relationship to ${children[i].new.name.full(middle='full')} (AKA ${children[i].name.full(middle='full')})?
field: children[i].user_relationship
choices:
  - I am their biological parent.: bio
  - I am their adoptive parent.: adopt
  - I am their legal guardian.: custody
  - ${children[i].new.name.full(middle='full')} (AKA ${children[i].name.full(middle='full')}) has lived in my home for 3 years and is recognized as my adopted child.: years
  - Other: other
---
id: not parent or guardian kickout
continue button field: not_parent_or_guardian_kickout
question: |
  Sorry
subquestion: |
  Sorry, you can only ask court to change a child’s name if you are their parent or guardian.
  
  If you have another child whose name you would like to change, click **Next**.
---
id: guardian documents
continue button field: children[i].guardian_docs
question: |
  Guardianship documentation
subquestion: |
  You should make a copy of the court order which gave you legal guardianship of ${children[i].new.name.full(middle='full')} (AKA ${children[i].name.full(middle='full')}).

  Attach a copy of the court order when you file the name change forms with the court.
---
id: child any convictions
question: |
  Has ${children[i].new.name.full(middle='full')} (AKA ${children[i].name.full(middle='full')}) been convicted of or placed on probation for any of the following in Illinois or any other state?
fields:
  - no label: children[i].any_convictions
    datatype: checkboxes
    choices:
      - A crime which requires them to register as a sex offender: register
      - Identity theft or aggravated identity theft: identity
      - A felony: felony
  - Was ${children[i].new.name.full(middle='full')} (AKA ${children[i].name.full(middle='full')}) pardoned of the crime requiring them to register as a sex offender?: children[i].register_pardon 
    show if: children[i].any_convictions['register']
  - Was ${children[i].new.name.full(middle='full')} (AKA ${children[i].name.full(middle='full')}) pardoned of the identity theft or aggravated identity theft?: children[i].identity_pardon
    show if: children[i].any_convictions['identity']
  - Was ${children[i].new.name.full(middle='full')} (AKA ${children[i].name.full(middle='full')}) pardoned of the felony 10 or more years ago?: children[i].felony_pardon
    show if: children[i].any_convictions['felony']
  - Did ${children[i].new.name.full(middle='full')} (AKA ${children[i].name.full(middle='full')}) complete their probation or sentence for their felony 10 or more years ago?: children[i].felony_complete
validation code: |
  children[i].in_need_of_pardon = False
  if children[i].any_convictions['register'] == True:
    if children[i].register_pardon == False:
      children[i].in_need_of_pardon = True
  if children[i].any_convictions['identity'] == True:
    if children[i].identity_pardon == False:
      children[i].in_need_of_pardon = True
  if children[i].any_convictions['felony'] == True:
    if children[i].felony_pardon == False and children[i].felony_complete == False:
      children[i].in_need_of_pardon = True
---
id: child need pardon kickout
continue button field: children[i].need_pardon_kickout
question: |
  Sorry
subquestion: |
  % if children[i].register_pardon == False:
  ${children[i].new.name.full(middle='full')} (AKA ${children[i].name.full(middle='full')}) must have been pardoned for their crime requiring them to register as a sex offender in order to use this program.
  % endif
  % if children[i].identity_pardon == False:
  ${children[i].new.name.full(middle='full')} (AKA ${children[i].name.full(middle='full')}) must have been pardoned for their identity theft crime.
  % endif
  % if children[i].felony_pardon == False and children[i].felony_complete == False:
  ${children[i].new.name.full(middle='full')} (AKA ${children[i].name.full(middle='full')}) must have been pardoned or completed their probation or sentence over 10 years ago.
  % endif
  
  If you want to change the name of a different child, click **Next**.
---
id: child name change reason
question: |
  % if i == 0:
  Why are you changing the child's name from "${children[i].name.full(middle='full')}" to "${children[i].new.name.full(middle='full')}?"
  % else:
  Why are you changing the ${ordinal(i)} child's name from "${children[i].name.full(middle='full')}" to "${children[i].new.name.full(middle='full')}?"
  % endif
subquestion: |
  Check all that apply.
fields:
  - It is in the best interest of the child that their name be changed because:: children[i].change_reasons
    datatype: checkboxes
    none of the above: False
    choices:
      - I want to change their name.: user_wants
      - They want to change their name.: child_wants
      - Other: other
  - Other reasons: children[i].other_reason
    input type: area
    show if: children[i].change_reasons['other']
---
id: child new name
question: |
  What would you like to change ${children[i].name.full(middle='full')}'s name to?
fields:
  - First: children[i].new.name.first
  - Middle: children[i].new.name.middle
    required: False
  - Last: children[i].new.name.last
  - Suffix: children[i].new.name.suffix
    code: |
      name_suffix()
    required: False
---
id: child birth address
question: |
  ${children[i].new.name.full(middle='full')} (AKA ${children[i].name.full(middle='full')})'s birth place
fields:
  - Was ${children[i].new.name.full(middle='full')} (AKA ${children[i].name.full(middle='full')}) born in the United States?: children[i].birth_place.in_america
    datatype: yesnoradio
    default: True
  - City: children[i].birth_place.city
  - State: children[i].birth_place.state
    code: |
      states_list() 
    show if: children[i].birth_place.in_america
  - County: children[i].birth_place.county
    show if: children[i].birth_place.in_america
  - Country: children[i].birth_place.country
    show if:
      variable: children[i].birth_place.in_america
      is: False
---
id: child address
question: |
  What is ${children[i].new.name.full(middle='full')} (AKA ${children[i].name.full(middle='full')})'s address?
fields:
  - Street address: children[i].address.address
    address autocomplete: True
  - Address line 2: children[i].address.unit
    required: False
  - City: children[i].address.city
  - State: children[i].address.state
    code: |
      states_list() 
  - ZIP code: children[i].address.zip
---
id: any other parents
question: |
  Does ${children[i].new.name.full(middle='full')} (AKA ${children[i].name.full(middle='full')}) have any parents, guardians, or custodians other than you?
subquestion: |
  Anyone who has custody over ${children[i].new.name.full(middle='full')} (AKA ${children[i].name.full(middle='full')}) is their custodian.
fields:
  - no label: children[i].any_other_parents
    datatype: yesnoradio
---
id: about other parents guardians
continue button field: about_other_parentals
question: |
  Notifying other parents, guardians, and custodians
subquestion: |
  If your child's other parents, guardians, and custodians agree to your child's name change, they will need to sign the name change request.

  If any of them do not agree to the name change, you will need to notify them of the name change request. However, you may ask the court to not require you to notify them. Courts usually do not require notification if it could risk hardship for the child.
---
id: child other parent
question: |
  Does ${children[i].new.name.full(middle='full')} (AKA ${children[i].name.full(middle='full')}) have a biological or adoptive parent other than you?
fields:
  - no label: children[i].include_other_parent
    datatype: yesnoradio
---
id: child third parent guardian
question: |
  % if children[i].include_other_parent == True:
  Does ${children[i].new.name.full(middle='full')} (AKA ${children[i].name.full(middle='full')}) have a parent or guardian other than you and ${children[i].parents[0].name.full(middle='full')}?
  % else:
  Does ${children[i].new.name.full(middle='full')} (AKA ${children[i].name.full(middle='full')}) have a guardian other than you? 
  % endif
fields:
  - no label: children[i].include_third_parent_guardian
    datatype: yesnoradio
---
id: child custody haver
question: |
  % if children[i].include_other_parent == False and children[i].include_third_parent_guardian == False:
  Does anyone other than you have physical custody over ${children[i].new.name.full(middle='full')} (AKA ${children[i].name.full(middle='full')})?
  % else:
  Does anyone else have physical custody over ${children[i].new.name.full(middle='full')} (AKA ${children[i].name.full(middle='full')})?
  % endif
fields:
  - no label: children[i].include_custody_haver
    datatype: yesnoradio
---
id: parent name
question: |
  % if j == 0:
  What is the first other parent, guardian, or custodian's name?
  % else:
  What is the additional parent, guardian, or custodian's name?
  % endif
fields:
  - First: children[i].parents[j].name.first
  - Middle: children[i].parents[j].name.middle
    required: False
  - Last: children[i].parents[j].name.last
  - Suffix: children[i].parents[j].name.suffix
    code: |
      name_suffix()
    required: False 
---
id: parent type
question: |
  Is ${children[i].parents[j].name.full(middle='full')} a parent, guardian, or custodian?
field: children[i].parents[j].parent_type
choices:
  - Parent
  - Guardian
  - Custodian
---
id: other parent agree
question: |
  Does ${children[i].parents[j].name.full(middle='full')} agree to ${children[i].new.name.full(middle='full')} (AKA ${children[i].name.full(middle='full')})'s name change?
fields:
  - no label: children[i].parents[j].agree
    datatype: yesnomaybe
---
id: other parent notarized signature
continue button field: children[i].parents[j].notarized_signature
question: |
  About ${children[i].parents[j].name.full(middle='full')}'s signature
subquestion: |
  ${children[i].parents[j].name.full(middle='full')} will need to sign the *Request for Name Change – Child Information* form in front of a Notary Public.
  
  You can find a Notary Public at a bank or currency exchange, and in some libraries.

  There may be a small fee for getting your forms notarized.
---
id: other parent address known
question: |
  Do you know ${children[i].parents[j].name.full(middle='full')}'s address?
fields:
  - no label: children[i].parents[j].address_known
    datatype: yesnoradio
---
id: other parent address
question: |
  What is ${children[i].parents[j].name.full(middle='full')}'s address?
fields:
  - Street address: children[i].parents[j].address.address
    address autocomplete: True
  - Address line 2: children[i].parents[j].address.unit
    required: False
  - City: children[i].parents[j].address.city
  - State: children[i].parents[j].address.state
    code: |
      states_list() 
  - ZIP code: children[i].parents[j].address.zip
---
id: notice waiver info
continue button field:  children[i].parents[j].notice_waiver_info  
question: |
  About notice and waiver
subquestion: |
  When you change a child's name, you are usually required to notify any other parent, guardian, or custodian. You provide "notice" by giving them a copy of the name change request forms. If you do not know where they live, you can publish "notice" of the name change request in a newspaper.

  You can ask the court to waive (skip) this notice if you believe that notice or publication would put ${children[i].new.name.full(middle='full')} (AKA ${children[i].name.full(middle='full')}) at risk of physical harm or discrimination.
---
id: other parent risk check
question: |
  Are you worried that giving notice to ${children[i].parents[j].name.full(middle='full')} of the name change request would put ${children[i].new.name.full(middle='full')} (AKA ${children[i].name.full(middle='full')}) at risk of physical harm or discrimination?
fields:
  - no label: children[i].parents[j].risk_check
    datatype: yesnoradio
---
#This code block handles logic for generating the text of the waiver reason question
depends on:
  - children[i].any_other_parents
  - children[i].parents[j].agree
  - children[i].parents[j].risk_check
  - children[i].parents[j].address_known
  - children[i].parents[j].name.first
  - children[i].parents[j].name.middle
  - children[i].parents[j].name.last
  - children[i].parents[j].name.suffix
code: |
  #Parent list generator is used to gather the information of parents who the user must notify. This list is generated because just iterating through all known parents would include empty objects and parents who do not need to be notified.
  parent_list_generator.clear()
  #The parent count variable is used with parent list generator. It is used as the index variable and is incremented whenever a parent is added to the list.
  parent_count = 0
  
  #The following variables are used as flags. They track whether notice would be a hardship, whether at least one parent would pose a risk, whether at least one parental would need to be notified by publication, and whether a parental with a known address would need to be notified.
  notice_waiver_hardship = False
  child_notice_would_be_published = False
  any_risk = False
  any_to_notify = False
 
  for child in children:
    if child.any_other_parents == True:
      if child.parents.number_gathered() > 0:
        for parent in child.parents:
          if parent.agree != True:
            if parent.address_known == False:
              child_notice_would_be_published = True
            if parent.risk_check == True:
              any_risk = True
              notice_waiver_hardship = True
            else:
              if parent.address_known == True:
                any_to_notify = True
                #parent_list_generator[parent_count] = child.parents[1]
                #parent_count += 1
    
                #parent_storage = child.parents[1]
                parent_list_generator.append(parent)
    
    #if child.include_other_parent == True:
    #  if child.parents[0].agree != True:
    #    if child.parents[0].address_known == False:
    #      child_notice_would_be_published = True
    #    if child.parents[0].risk_check == True:
    #      any_risk = True
    #      notice_waiver_hardship = True
    #    else:
    #      if child.parents[0].address_known == True:
    #        any_to_notify = True
    #        #parent_list_generator[parent_count] = child.parents[0]
    #        #parent_count += 1

    #      #parent_storage = child.parents[0]
    #      
    #      #Creating the parent list generator ran into an issue: I tried to use a list comprehension in an ALDocumentBundle so I would only need one attachment block for the notice of court date pdf, but unfortunately parent_list_generator[i] seems to just point to the corresponding children[i].parents[j] object, which caused some glitches. I hope to figure out how to solve this issue, but it may become mute if SME feedback leads to the parent list functionality being completely overhauled.
    #      parent_list_generator.append(child.parents[0])
    #if child.include_third_parent_guardian == True:      
    #  if child.parents[1].agree != True:
    #    if child.parents[1].address_known == False:
    #      child_notice_would_be_published = True
    #    if child.parents[1].risk_check == True:
    #      any_risk = True
    #      notice_waiver_hardship = True
    #    else:
    #      if child.parents[1].address_known == True:
    #        any_to_notify = True
    #        #parent_list_generator[parent_count] = child.parents[1]
    #         #parent_count += 1

    #        #parent_storage = child.parents[1]
    #        parent_list_generator.append(child.parents[1])
    #if child.include_custody_haver == True:
    #  if child.parents[2].agree != True:
    #    if child.parents[2].address_known == False:
    #      child_notice_would_be_published = True
    #    if child.parents[2].risk_check == True:
    #      any_risk = True
    #      notice_waiver_hardship = True
    #    else:
    #      if child.parents[2].address_known == True:
    #        any_to_notify = True
    #        #parent_list_generator[parent_count] = child.parents[2]
    #        #parent_count += 1

    #      #parent_storage = child.parents[2]
    #      parent_list_generator.append(child.parents[2])  

  parent_list_generator.there_is_another = False 
  waiver_reason_logic = True
---
id: want to publish check
question: |
  % if children.number_gathered() == 1:
  Are you concerned publishing notice of ${children[0].new.name.full(middle='full')} (AKA ${children[0].name.full(middle='full')})'s name change would put them at risk of harm or discrimination?
  % else:
  Are you concerned publishing notice of these name changes would put your children at risk of harm or discrimination?
  % endif
subquestion: |
  Since you do not know the address of all parents, guardians, or custodians you would need to notify of this name change, you may have to publish notice in a local newspaper. However, you can file a motion requesting you not be required to publish notice.
  
  % if children.number_gathered() == 1:
  You can ask the judge to skip publication of the name change if it would be a hardship on your children. A hardship could include harm to health or safety.
  % else:
  You can ask the judge to skip publication of the name change if it would be a hardship on your child. A hardship could include harm to health or safety.
  % endif
  
  You can also ask the judge to skip publication if you have or did have a protective court order. This could be:
  
  * An Order of Protection,
  * A Stalking No Contact Order,
  * A Civil No Contact Order,
  * A protective order in someone else's criminal case,
  * Protection under someone else's bail conditions, or
  * A similar protective order outside Illinois.
fields:
  - no label: request_waiver
    datatype: yesnoradio
---
id: publication waiver reasons
question: |
  Why do you need a notice waiver?
subquestion: |
  % if interview_type == 'adult':
  You may need a waiver if you have or did have protection from a court order. You may also need a waiver if publication would be a hardship for the person whose name would be changed.
  % else:
  % if children.number_gathered() == 1:
  You may need a waiver if you have or did have protection from a court order. You may also need a waiver if publication would be a hardship for the child whose name would be changed.
  % else:
  You may need a waiver if you have or did have protection from a court order. You may also need a waiver if publication would be a hardship for the children whose name would be changed.
  % endif
  % endif
  
  A hardship can be many things. It can include fear of:
  
  * Physical violence,
  * Discrimination,
  * Harassment,
  * Bullying, or
  * Threats of violence.
fields:
  - no label: waiver_reason
    datatype: checkboxes
    minlength: 1
    choices:
      - I have or did have protection from a court order.: order
      - I need a waiver of notice and publication of name change because it would be a hardship for the person who is changing their name.: hardship
    validation messages:
      minlength: |
        Please select at least one or click < Back if none apply.
---
id: protective order type
question: |
  What kind of court protection do or did you have?
subquestion: |
  You can enter details about the order on another screen.

  If you do any of these kinds of orders, you can click **Back** and change your answer.
fields:
  - I have or did have protection from: protective_order
    datatype: checkboxes
    minlength: 1
    none of the above: False
    choices:
      - An Order of Protection: op
      - A Stalking No Contact Order: snco
      - A Civil No Contact Order: cnco
      - A Protective order in someone else's criminal case: other_criminal
      - Being a protected person under someone else's bail conditions: bail
      - A similar protective order outside Illinois: other_order
    validation messages:
      minlength: |
        Please select at least one or click < Back if none apply.
  - In which state was the protective order? (not Illinois): other_order_state
    maxlength: 25
    show if:
      variable: protective_order['other_order']
      is: True
---
# add question if protective order is against one of the other parents
id: order against parents
question: |
  % if children.number_gathered() == 1:
  Is the protective order against one of the parents, guardians, or custodians of your child?
  % else:
  Is the protective order against one of the parents, guardians, or custodians of your children?
  % endif
fields:
  - no label: order_against_parents
    datatype: yesnoradio
---
code: |
  orders[i].name.text
  if orders.number_gathered() >= 4:
    orders.there_is_another = False
  orders[i].complete = True
---

id: protective order details
question: |
  % if i == 0:
  Protective order case details
  % else:
  More protective order case details
  % endif
subquestion: |
  For any of the following, enter more information to your *Motion to Waive Notice and Publication*:
  
  % if protective_order['op']:
   * An Order of Protection
  % endif
  % if protective_order['snco']:
   * A Stalking No Contact Order
  % endif
  % if protective_order['cnco']:
   * A Civil No Contact Order
  % endif
  % if protective_order['other_criminal']:
   * A Protective order in someone else's criminal case
  % endif
  % if protective_order['bail']:
   * Being a protected person under someone else's bail conditions
  % endif
  % if protective_order['other_order']:
   * A similar protective order outside Illinois
  % endif
fields:
  - Case number: orders[i].number
    maxlength: 30
  - County: orders[i].name.text
    maxlength: 30
  - State: orders[i].state
    code: |
      states_list()
    default: IL      
---
id: any other orders
question: |
  Are there other protective order cases?
subquestion: |
  To waive notice and publication in the name change request, you must add details about the following cases:
  
  % if protective_order['op']:
   * An Order of Protection
  % endif
  % if protective_order['snco']:
   * A Stalking No Contact Order
  % endif
  % if protective_order['cnco']:
   * A Civil No Contact Order
  % endif
  % if protective_order['other_criminal']:
   * A Protective order in someone else's criminal case
  % endif
  % if protective_order['bail']:
   * Being a protected person under someone else's bail conditions
  % endif
  % if protective_order['other_order']:
   * A similar protective order outside Illinois
  % endif
  
  You can enter up to 4 cases. So far you have told us about:
  
  % for order in orders:
   * Case number: ${order.number} in ${order.name.text}, ${order.state}
  % endfor
fields:
  - "Add another case?": orders.there_is_another
    datatype: yesnoradio
---
id: hardship reason
question: |
  % if interview_type == "child":
  % if child_notice_would_be_published == True:
  Explain why publication would be a hardship (optional)
  % else:
  Explain why giving notice would be a hardship
  % endif
  % else:
  ADULT NAME CHANGE TEXT
  % endif
subquestion: |
  ${collapse_template(notice_waiver_example)}
fields:
  - Notice and publication would be a hardship because:: hardship_text
    input type: area
---
template: notice_waiver_example
subject: |
  **What should my answer look like?**
content: |  
  % if interview_type == "child":
  % if children.number_gathered() == 1:
  This explanation will go on your *Motion to Waive Notice and Publication*. You should explain why giving or publishing notice would put ${children[0].new.name.full(middle='full')} (AKA ${children[0].name.full(middle='full')}) at risk of physical harm or discrimination.
  % else:
  This explanation will go on your *Motion to Waive Notice and Publication*. You should explain why giving or publishing notice would put your children at risk of physcial harm or discrimination.
  % endif

  Here are some examples: 
  
  "I need to change ${children[0].name.full(middle='full')}'s name to ${children[0].new.name.full(middle='full')} because we are trying to get away from my ex-boyfriend. He has abused ${children[0].name.full(middle='full')} in the past. I am afraid he will hurt ${children[0].name.full(middle='full')} if he learns about this name change request."
  
  "${children[0].name.full(middle='full')} wants to change their name to ${children[0].new.name.full(middle='full')} as part of a gender transition. I am afraid publishing notice of this change in the newspaper could lead to my child and I experiencing discrimination or targeted harassment."
  % else:
  ADULT NAME CHANGE TEXT
  % endif
---
id: other parent notice method
question: |
  How will you give ${children[i].parents[j].name.full(middle='full')} notice of this name change request?
subquestion: |
  Notice is the way you tell other parents and guardians about the name change and court dates.

  You can give notice by certified mail or by asking the sheriff to deliver a copy of the forms to the other parents or custodian. You can only notify them by newspaper if you do not know their address.
field: children[i].parents[j].receive_method 
choices:
  - I will give notice of this Request and the scheduled court date by certified mail.: mail
  - I will give notice of this Request and the scheduled court date by service of process by sheriff.: sheriff
---
id: published notice info
continue button field: children[i].parents[j].published_notice_info 
question: |
  About published notice
subquestion: |
  If ${children[i].parents[j].name.full(middle='full')} cannot be found, you must ask a local newspaper to publish notice of the name change request once a week for three weeks in a row.

  This program will make a *Publication Notice of Court Date for Request for Name Change.* You must file it with the Circuit Clerk before you publish the notice in a newspaper.

  Ask the Circuit Clerk for a court date at least 8 weeks from when you file the Publication Notice.
---
id: child safety address
question: |
  Do you want to use the safe mailing address for ${children[i].new.name.full(middle='full')} (AKA ${children[i].name.full(middle='full')})?
subquestion: |
  You need to put an address for your child on the court forms, but it does not have to be the address where they live.
  
  The safe mailing address you entered is:
  
  ${users[0].address.line_one(bare=True)}
  ${users[0].address.line_two()}
fields:
  - no label: children[i].use_safe_address
    datatype: yesnoradio
---
id: your contact information
question: |
  What is your contact information?
subquestion: |
  ${ collapse_template(contact_info_help) }  
fields:  
  - Phone number: users[0].phone_number
    datatype: al_international_phone
    required: False
  - Do you have an email address?: users[0].has_email_address      
    datatype: yesnoradio
  - note: |
      This email address will appear on your court forms. Be sure to check 
      this email daily, otherwise you may miss important information about 
      your case.
    show if: x.has_email_address      
  - Email address: users[0].email    
    datatype: email
    show if: 
      variable: users[0].has_email_address
      is: True
validation code: |
  if (not showifdef('users[0].phone_number') and \
      (users[0].has_email_address == False)):
    validation_error(word("You need to provide at least one contact method."), field="users[0].other_contact_method")
---
template: contact_info_help
subject: |
  **Why do I need to include this?**
content: |  
  The court must be able to reach you, so you need to include some contact information.
---
id: filing county
question: |
  Which county are you filing the name change request in?
fields:
  - no label: trial_court_index
    datatype: integer
    code: |
      ilao_court_county_lookup(court_list)
validation code: |
  if trial_court_index == "-1":
    trial_court = court_list.as_court('trial_court', 15)
  else:
    trial_court = court_list.as_court('trial_court', trial_court_index)
---
code: |
  trial_court_index
  filing_county = trial_court.address.county
---
depends on:
  - trial_court_index
  - cook_district
code: |
  if trial_court_index == -1:
    trial_court = court_list.as_court('trial_court', cook_district)
  else:
    trial_court = court_list.as_court('trial_court', trial_court_index)
    
  court_name = str(trial_court.name)
  court_street_address = str(trial_court.address.address)
  court_city = str(trial_court.address.city)
  court_state = str(trial_court.address.state)
  court_zip = str(trial_court.address.zip)
  filing_county = str(trial_court.address.county)
  courthouse_info = court_name + ", " + court_street_address + ", " + court_city + ", " + court_state + " " + court_zip
---
id: Cook County district
question: |
  In which Cook County courthouse is your case?
subquestion: |
  This information should be found near the top of your court papers.

  ${ collapse_template(cook_district_help) }  
field: cook_district
choices:
  - First Municipal District, Daley Center, 50 W. Washington Street, Chicago: 15
  - Second Municipal District, 5600 Old Orchard Road, Skokie: 16
  - Third Municipal District, 2121 Euclid Avenue, Rolling Meadows: 17
  - Fourth Municipal District, 1500 Maybrook Drive, Maywood: 18
  - Fifth Municipal District, 10220 S. 76th Avenue, Bridgeview: 19
  - Sixth Municipal District, 16501 South Kedzie Parkway, Markham: 20
---
template: cook_district_help
subject: |
  **What if I am not sure?**
content: |  
  Visit **[Illinois Court Help](https://www.ilcourthelp.gov/)**, or you can call or text (833) 411-1121 for assistance.
---
template: signature_help
subject: |
  **What does it mean to sign the *Request for Name Change*?**
content: |  
  By signing your *Request for Name Change*, you are certifying that:
  
  * Everything on the form is true and correct, and
  * You understand that making a false statement on the form is perjury, which can result in criminal penalties.
  
  See the [**Code of Civil Procedure, 735 ILCS 5/1-109**](https://www.ilga.gov/legislation/ilcs/documents/073500050k1-109.htm), for more information.
---
id: notice reminder
continue button field: notice_reminder
question: |
  % if parent_list_generator.number_gathered() > 3:
  About the *Notice of court date* forms
  % else:
  About the *Notice of court date*
  % endif
subquestion: |  
  % if parent_list_generator.number_gathered() > 3:
  Each notice form has room for 3 signatures. Be sure to send a copy to **each person** on each notice.
  % else:
  The notice form has room for 3 signatures. Be sure to send a copy to **each person** on the notice.
  % endif
---
id: download page get docs screen
event: get_docs_screen
question: |
  Download
subquestion: |  
  Your forms are ready. View and download your forms below. Click **Make changes** to fix any mistakes.
  
  The Instructions have important information. You can read them to find out what to do next.
  
  This program does not file your forms with the court. You will need to do this yourself. Learn about [**e-filing in Illinois**](https://www.illinoiscourts.gov/eservices/information-for-filers-without-lawyers).
  
  ${ action_button_html(url_action('review_answers'), label=':edit: Make changes', color='success', size="md") }

  ${ al_user_bundle.download_list_html() }
 
  &nbsp;

  ${ al_user_bundle.send_button_html(show_editable_checkbox=False) }
  
  **Note:** This program **does not** file your forms. You will need to do this yourself.

  Thank you for using ILAO Easy Forms!
under: |
  % if not user_logged_in():
  [${fa_icon("sign-in-alt", color="#0079d0", size="sm")} **Sign-in**](${url_of('login', next=interview_url())}) or [**create**](${url_of('register', next=interview_url())}) an ILAO Easy Form account to save your progress (optional).
  % endif

 
  ${ action_button_html(interview_url(i="docassemble.ILAO:feedback.yml", easy_form_interview=ilao_easy_form_url, easy_form_title=ilao_easy_form_title, easy_form_page=user_info().question_id, easy_form_variable=user_info().variable, local=False,reset=1), label=':comment: Was this program helpful?', color="#181c36", size="md", new_window=True) }
---
generic object: ALDocumentBundle
template: x.send_email_template
subject: |
  Name change for a minor
content: |
  Your forms are attached.
  
  Thanks for using ILAO Easy Forms!
  
  [Illinois Legal Aid Online](https://www.illinoislegalaid.org)
---
objects:
  - instructions: ALDocument.using(title="Instructions", filename="instructions.pdf", has_addendum=False)
  - request: ALDocument.using(title="Request for name change (minor children)", filename="minor_name_change_request.pdf", has_addendum=False)
  - additional_children: ALDocument.using(title="Additional children", filename="additional_children.pdf", has_addendum=False)
  - publication_notice: ALDocument.using(title = "Publication notice of court date", filename="publication_notice.pdf", has_addendum=False)
  - order_to_waive_notice: ALDocument.using(title = "Order on motion to waive notice and publication", filename="order_to_waive_notice.pdf", has_addendum=False)
  - order: ALDocument.using(title = "Order for name change (minor name change)", filename="order.pdf", has_addendum=False)
  - notice_of_court_date: ALDocument.using(title = "Notice of court date for request for name change", filename="notice_of_court_date.pdf", has_addendum=False)
  - notice_of_court_date_2: ALDocument.using(title = "Notice of court date for request for name change 2", filename="notice_of_court_date.pdf", has_addendum=False)
  - notice_of_court_date_3: ALDocument.using(title = "Notice of court date for request for name change 3", filename="notice_of_court_date.pdf", has_addendum=False)
  - notice_of_court_date_4: ALDocument.using(title = "Notice of court date for request for name change 4", filename="notice_of_court_date.pdf", has_addendum=False)
  - notice_of_court_date_5: ALDocument.using(title = "Notice of court date for request for name change 5", filename="notice_of_court_date.pdf", has_addendum=False)
  - notice_of_court_date_6: ALDocument.using(title = "Notice of court date for request for name change 6", filename="notice_of_court_date.pdf", has_addendum=False)
  - notice_of_court_date_7: ALDocument.using(title = "Notice of court date for request for name change 7", filename="notice_of_court_date.pdf", has_addendum=False)
  - notice_of_court_date_8: ALDocument.using(title = "Notice of court date for request for name change 8", filename="notice_of_court_date.pdf", has_addendum=False)
  - notice_of_court_date_9: ALDocument.using(title = "Notice of court date for request for name change 9", filename="notice_of_court_date.pdf", has_addendum=False)
  - notice_of_court_date_10: ALDocument.using(title = "Notice of court date for request for name change 10", filename="notice_of_court_date.pdf", has_addendum=False)
  - notice_of_court_date_11: ALDocument.using(title = "Notice of court date for request for name change 11", filename="notice_of_court_date.pdf", has_addendum=False)
  - notice_of_court_date_12: ALDocument.using(title = "Notice of court date for request for name change 12", filename="notice_of_court_date.pdf", has_addendum=False)
  - motion_to_waive_notice: ALDocument.using(title = "Motion to waive notice and publication", filename="motion_to_waive.pdf", has_addendum=False)
---
objects:
  - children[i].additional_parents_bundle: ALDocumentBundle.using(elements=[item.parent_info_sheet for item in children[i].parents], filename="additional_parent.pdf", title = "Additional parents", enabled=True)
  #- children[i].one_notice_set: ALDocumentBundle.using(elements=[item.notice_of_court_date for item in children[i].parents, filename="notice_of_court_date.pdf", title = "Notice of court date")
---
objects:
  - all_parents_bundle: ALDocumentBundle.using(elements=[item.additional_parents_bundle for item in children], filename="additional_parents.pdf", title = "Additional parents", enabled=True)
---
objects:
  - change_order_bundle: ALDocumentBundle.using(elements = [order for item in children], filename="name_change_order_bundle.pdf", title = "Order for name change (minor name change)", has_addendum=False, enabled=True)
---
#on change:
#  children[i].name.first: |
#    for child in children:
#      undefine('child.additional_parents_bundle.enabled')
#    undefine('all_parents_bundle.enabled')
#    undefine('children_information_bundle.enabled')
---
#children_information = DAList('children_information', elements=[item.child_information for item in children], filename="child_information.pdf", title = "Child information", enabled=True)
---
#on change:
#  children[i].name.first: |
#    undefine('children_information_bundle')
#---
#reconsider: True
#code: |
#  undefine('children_information_bundle')
#  empty_the_bundles = True
---
#I don't think that the list comprehension bundles have to be listed separately from the other AlDocument and ALDocumentBundle blocks, but I made them separate nonetheless.
objects:
  - children_information_bundle: ALDocumentBundle.using(elements=[item.child_information for item in children], filename="child_information.pdf", title = "Child information", enabled=True)
  #- notices: ALDocumentBundle.using(elements=[item.notice_of_court_date for item in parent_list_generator], filename="notice_of_court_date.pdf", title = "Notice of court date")
  #- notices: ALDocumentBundle.using(elements=[item.one_notice_set for item in children], filename="notice_of_court_date.pdf", title = "Notice of court date")
---
objects:
  - request_bundle: ALDocumentBundle.using(elements=[request, additional_children, children_information_bundle, all_parents_bundle], filename="name_change_request_bundle.pdf", title="Request", enabled=True) 
  #- order_bundle: ALDocumentBundle.using(elements=[order, order_to_waive_notice], filename="name_change_order_bundle.pdf", title="Order", enabled=True)
  #See the comments in the code block creating the parent_list_generator list to see why this bundle does not use list comprehension.
  - notice_bundle: ALDocumentBundle.using(elements=[notice_of_court_date, notice_of_court_date_2, notice_of_court_date_3, notice_of_court_date_4, notice_of_court_date_5, notice_of_court_date_6, notice_of_court_date_7, notice_of_court_date_8, notice_of_court_date_9, notice_of_court_date_10, notice_of_court_date_11, notice_of_court_date_12], filename="notice_of_court_date_bundle.pdf", title="Notice of court date for request for name change")
  #- notice_bundle: ALDocumentBundle.using(elements=[notices], filename="notice_of_court_date_bundle.pdf", title= "Notices")
---
#The notice bundle was behaving oddly. It was making duplicates of its first entry rather than including all entries. My makeshift solution is to list the documents individually in these bundles.
objects:
  -  al_user_bundle: ALDocumentBundle.using(elements=[instructions, request_bundle, motion_to_waive_notice, publication_notice, notice_of_court_date, notice_of_court_date_2, notice_of_court_date_3, notice_of_court_date_4, notice_of_court_date_5, notice_of_court_date_6, notice_of_court_date_7, notice_of_court_date_8, notice_of_court_date_9, notice_of_court_date_10, notice_of_court_date_11, notice_of_court_date_12, change_order_bundle, order_to_waive_notice], filename="name_change_child.pdf", title="All forms")
  -  al_court_bundle: ALDocumentBundle.using(elements=[instructions, request_bundle, motion_to_waive_notice, publication_notice, notice_of_court_date, notice_of_court_date_2, notice_of_court_date_3, notice_of_court_date_4, notice_of_court_date_5, notice_of_court_date_6, notice_of_court_date_7, notice_of_court_date_8, notice_of_court_date_9, notice_of_court_date_10, notice_of_court_date_11, notice_of_court_date_12, change_order_bundle, order_to_waive_notice], filename="name_change_child.pdf", title="All forms")
---
code: |
  instructions.enabled = True
  request.enabled = True
  order.enabled = True
  additional_children.enabled = False
  
  
  #The name change request form has space for 4 children. Any more children must be on the additional children template.
  if children.number_gathered() > 4:
    additional_children.enabled = True

  #notices.enabled = False
  
 
  #child_loop_index = 0 
  #while child_loop_index < children.number_gathered():
  for child in children:  
    
    child.has_custodian = False
    child.has_guardian = False
    child.child_information.enabled = True
    child.additional_parents_bundle.enabled = False

    # new logic test
    if child.any_other_parents == True:
      if child.parents.number_gathered() > 1:
        child.parents[0].parent_type = "ignore"
        for parent in child.parents:
          parent.parent_info_sheet.enabled = True
          if parent.parent_type == "Custodian":
            child.has_custodian = True
          elif parent.parent_type != "ignore":
            child.has_guardian = True
        child.parents[0].parent_info_sheet.enabled = False
      else:
        child.parents[0].parent_info_sheet.enabled = False
    else:
      child.parents[0].parent_info_sheet.enabled = False
    
  #  removed for testing with new logic 
  #  if child.any_other_parents == True:
  #    child.parents[0].parent_info_sheet.enabled = False
  #    child.additional_parents.enabled = False
  #    #for parent in children[child_loop_index].parents:
  #    #  parent.parent_info_sheet.enabled = False
  #    #  if j != 0:
  #    #    children[i].additional_parents.enabled = True
  #    #    all_parents.enabled = True
  #    #    if parent.parent_type == "Custodian":
  #    #      children[i].has_custodian = True
  #    #    else:
  #    #      children[i].has_guardian = True
  #    #    parent.parent_info_sheet.enabled = True
  #    
  #    
  #    parent_loop_index = 1
  #    while parent_loop_index < child.parents.number_gathered():
  #      child.parents[parent_loop_index].parent_info_sheet.enabled = True
  #      child.additional_parents.enabled = True
  #      all_parents_bundle.enabled = True
  #      if child.parents[parent_loop_index].parent_type == "Custodian":
  #        child.has_custodian = True
  #      else:
  #        child.has_guardian = True
  #      test_me = True
  #      parent_loop_index += 1 
  #  #child_loop_index += 1      
    
  #enabled_enabler = True
  #for child in children:
  #  child.has_custodian = False
  #  child.has_guardian = False
  #  child.child_information.enabled = True
  #  child.additional_parents.enabled = False
  #  
  #  if child.any_other_parents == True:
  #    parent_loop_index = 0
  #    while parent_loop_index < child.parents.number_gathered():
  #      child.parents[parent_loop_index].parent_info_sheet.enabled = False
  #      if parent_loop_index != 0:
  #        child.additional_parents.enabled = True
  #        all_parents.enabled = True
  #        if child.parents[parent_loop_index].parent_type == "Custodian":
  #          child.has_custodian = True
  #        else:
  #          child.has_guardian = True
  #        child.parents[parent_loop_index].parent_info_sheet.enabled = True
  #      parent_loop_index += 1
        
  motion_to_waive_notice.enabled = False
  notice_bundle.enabled = False
  notice_of_court_date.enabled = False
  order_to_waive_notice.enabled = False
  publication_notice.enabled = False
  #notices.enabled = False

  #See the comments in the code block creating the parent_list_generator list to see why this bundle does not use list comprehension.
  notice_of_court_date_2.enabled = False
  notice_of_court_date_3.enabled = False
  notice_of_court_date_4.enabled = False
  notice_of_court_date_5.enabled = False
  notice_of_court_date_6.enabled = False
  notice_of_court_date_7.enabled = False
  notice_of_court_date_8.enabled = False
  notice_of_court_date_9.enabled = False
  notice_of_court_date_10.enabled = False
  notice_of_court_date_11.enabled = False
  notice_of_court_date_12.enabled = False
  
  
     
  
  if any_risk == True or (child_notice_would_be_published == True and showifdef('request_waiver') == True):
    motion_to_waive_notice.enabled = True
    order_to_waive_notice.enabled = True
  elif child_notice_would_be_published == True:
    publication_notice.enabled = True
  if any_to_notify == True:  

  
    notice_of_court_date.enabled = True
    #for child in children:
    #  if child.include_other_parent == True:
    #    if child.parents[0].agree != True:
    #      if child.parents[0].risk_check != True:
    #        notices.enabled = True
    #  if child.include_third_parent_guardian == True:
    #    if child.parents[1].agree != True:
    #      if child.parents[1].risk_check != True:
    #        notices.enabled = True
    #  if child.include_custody_haver == True:
    #    if child.parents[2].agree != True:
    #      if child.parents[2].risk_check != True:
    #        notices.enabled = True
           
  #if notices.enabled == True:
  #  parent_for_loop = 0
  #  while parent_for_loop < parent_list_generator.number_gathered():
  #    parent_list_generator[parent_for_loop].notice_of_court_date.enabled = True
  #    parent_for_loop += 3
  
  #See the comments in the code block creating the parent_list_generator list to see why this bundle does not use list comprehension.
  if notice_of_court_date.enabled == True:
    notice_bundle.enabled = True
    if parent_list_generator.number_gathered() > 3:
      notice_of_court_date_2.enabled = True
      if parent_list_generator.number_gathered() > 6:
        notice_of_court_date_3.enabled = True
        if parent_list_generator.number_gathered() > 9:
          notice_of_court_date_4.enabled = True
          if parent_list_generator.number_gathered() > 12:
            notice_of_court_date_5.enabled = True
            if parent_list_generator.number_gathered() > 15:
              notice_of_court_date_6.enabled = True
              if parent_list_generator.number_gathered() > 18:
                notice_of_court_date_7.enabled = True 
                if parent_list_generator.number_gathered() > 21:
                  notice_of_court_date_8.enabled = True
                  if parent_list_generator.number_gathered() > 24:
                    notice_of_court_date_9.enabled = True
                    if parent_list_generator.number_gathered() > 27:
                      notice_of_court_date_10.enabled = True
                      if parent_list_generator.number_gathered() > 30:
                        notice_of_court_date_11.enabled = True
                        if parent_list_generator.number_gathered() > 33:
                          notice_of_court_date_12.enabled
---
attachment:
  variable name: instructions[i]
  name: instructions
  filename: instructions
  skip undefined: True
  editable: False
  pdf template file: How_To_Change_A_Name_for_Minor_Children2.pdf
  fields:
      - "fake": ${ "" }
---
attachment:
  variable name: request[i]
  name: request
  filename: request
  skip undefined: True
  editable: False
  pdf template file: Request_for_Name_Change_Minor.pdf
  fields:
    - "filing_county": ${end_in_county(filing_county)}
    - "user_name": ${ users[0].name.full(middle='full')}
    - "case_number": ${""}
    - "one_child_old_first": ${children[0].name.first}
    - "one_child_old_middle": ${children[0].name.middle}
    - "one_child_old_last": ${children[0].name.last if children[0].name.suffix == "" else (children[0].name.last + " " + children[0].name.suffix)}
    - "one_child_new_first": ${children[0].new.name.first}
    - "one_child_new_middle": ${ children[0].new.name.middle}
    - "one_child_new_last": ${children[0].new.name.last if children[0].new.name.suffix == "" else (children[0].new.name.last + " " + children[0].new.name.suffix)}
    - "two_child_old_first": ${children[1].name.first}
    - "two_child_old_middle": ${children[1].name.middle}
    - "two_child_old_last": ${children[1].name.last if children[1].name.suffix == "" else (children[1].name.last + " " + children[1].name.suffix)}
    - "two_child_new_first": ${children[1].new.name.first}
    - "two_child_new_middle": ${ children[1].new.name.middle}
    - "two_child_new_last": ${children[1].new.name.last if children[1].new.name.suffix == "" else (children[1].new.name.last + " " + children[1].new.name.suffix)}
    - "three_child_old_first": ${children[2].name.first}
    - "three_child_old_middle": ${children[2].name.middle}
    - "three_child_old_last": ${children[2].name.last if children[2].name.suffix == "" else (children[2].name.last + " " + children[2].name.suffix)}
    - "three_child_new_first": ${children[2].new.name.first}
    - "three_child_new_middle": ${ children[2].new.name.middle}
    - "three_child_new_last": ${children[2].new.name.last if children[2].new.name.suffix == "" else (children[2].new.name.last + " " + children[2].new.name.suffix)}
    - "four_child_old_first": ${children[3].name.first}
    - "four_child_old_middle": ${children[3].name.middle}
    - "four_child_old_last": ${children[3].name.last if children[3].name.suffix == "" else (children[3].name.last + " " + children[3].name.suffix)}
    - "four_child_new_first": ${children[3].new.name.first}
    - "four_child_new_middle": ${ children[3].new.name.middle}
    - "four_child_new_last": ${children[3].new.name.last if children[3].new.name.suffix == "" else (children[3].new.name.last + " " + children[3].new.name.suffix)}
    - "more_than_four_kids": ${True if children.number_gathered() > 4 else False}
    - "child_info_attached": ${True}
    - "illinois_start_date": ${format_date(started_living_in_illinois, format='long')}
    - "e_signature": ${ users[0].name.full(middle='full') if e_signature == True else ""}
    - "user_address": ${users[0].address.on_one_line(bare=True)}
    - "user_phone": ${phone_number_formatted(users[0].phone_number)}
    - "user_email": ${users[0].email if users[0].has_email_address == True else ""}
---
attachment:
  variable name: additional_children[i]
  name: additional_children
  filename: additional_children
  skip undefined: True
  editable: False
  pdf template file: Request_for_Name_Change_Additional.pdf
  fields:
    - "case_number": ${""}
    - "child_old_first_5": ${children[4].name.first}
    - "child_old_middle_5": ${children[4].name.middle}
    - "child_old_last_5": ${children[4].name.last if children[4].name.suffix == "" else (children[4].name.last + " " + children[4].name.suffix)}
    - "child_new_first_5": ${children[4].new.name.first}
    - "child_new_middle_5": ${children[4].new.name.middle}
    - "child_new_last_5": ${children[4].new.name.last if children[4].new.name.suffix == "" else (children[4].new.name.last + " " + children[4].new.name.suffix)}
    - "child_old_first_6": ${children[5].name.first}
    - "child_old_middle_6": ${children[5].name.middle}
    - "child_old_last_6": ${children[5].name.last if children[5].name.suffix == "" else (children[5].name.last + " " + children[5].name.suffix)}
    - "child_new_first_6": ${children[5].new.name.first}
    - "child_new_middle_6": ${children[5].new.name.middle}
    - "child_new_last_6": ${children[5].new.name.last if children[5].new.name.suffix == "" else (children[5].new.name.last + " " + children[5].new.name.suffix)}
    - "child_old_first_7": ${children[6].name.first}
    - "child_old_middle_7": ${children[6].name.middle}
    - "child_old_last_7": ${children[6].name.last if children[6].name.suffix == "" else (children[6].name.last + " " + children[6].name.suffix)}
    - "child_new_first_7": ${children[6].new.name.first}
    - "child_new_middle_7": ${children[6].new.name.middle}
    - "child_new_last_7": ${children[6].new.name.last if children[6].new.name.suffix == "" else (children[6].new.name.last + " " + children[6].new.name.suffix)}
    - "child_old_first_8": ${children[7].name.first}
    - "child_old_middle_8": ${children[7].name.middle}
    - "child_old_last_8": ${children[7].name.last if children[7].name.suffix == "" else (children[7].name.last + " " + children[7].name.suffix)}
    - "child_new_first_8": ${children[7].new.name.first}
    - "child_new_middle_8": ${children[7].new.name.middle}
    - "child_new_last_8": ${children[7].new.name.last if children[7].new.name.suffix == "" else (children[7].new.name.last + " " + children[7].new.name.suffix)}
    - "child_old_first_9": ${children[8].name.first}
    - "child_old_middle_9": ${children[8].name.middle}
    - "child_old_last_9": ${children[8].name.last if children[8].name.suffix == "" else (children[8].name.last + " " + children[8].name.suffix)}
    - "child_new_first_9": ${children[8].new.name.first}
    - "child_new_middle_9": ${children[8].new.name.middle}
    - "child_new_last_9": ${children[8].new.name.last if children[8].new.name.suffix == "" else (children[8].new.name.last + " " + children[8].new.name.suffix)}
    - "child_old_first_10": ${children[9].name.first}
    - "child_old_middle_10": ${children[9].name.middle}
    - "child_old_last_10": ${children[9].name.last if children[9].name.suffix == "" else (children[9].name.last + " " + children[9].name.suffix)}
    - "child_new_first_10": ${children[9].new.name.first}
    - "child_new_middle_10": ${children[9].new.name.middle}
    - "child_new_last_10": ${children[9].new.name.last if children[9].new.name.suffix == "" else (children[9].new.name.last + " " + children[9].new.name.suffix)}
    - "child_old_first_11": ${children[10].name.first}
    - "child_old_middle_11": ${children[10].name.middle}
    - "child_old_last_11": ${children[10].name.last if children[10].name.suffix == "" else (children[10].name.last + " " + children[10].name.suffix)}
    - "child_new_first_11": ${children[10].new.name.first}
    - "child_new_middle_11": ${children[10].new.name.middle}
    - "child_new_last_11": ${children[10].new.name.last if children[10].new.name.suffix == "" else (children[10].new.name.last + " " + children[10].new.name.suffix)}
    - "child_old_first_12": ${children[11].name.first}
    - "child_old_middle_12": ${children[11].name.middle}
    - "child_old_last_12": ${children[11].name.last if children[11].name.suffix == "" else (children[11].name.last + " " + children[11].name.suffix)}
    - "child_new_first_12": ${children[11].new.name.first}
    - "child_new_middle_12": ${children[11].new.name.middle}
    - "child_new_last_12": ${children[11].new.name.last if children[11].new.name.suffix == "" else (children[11].new.name.last + " " + children[11].new.name.suffix)}
---
attachment:
  variable name: order_to_waive_notice[i]
  name: order_to_waive_notice
  filename: order_to_waive_notice
  skip undefined: True
  editable: False
  pdf template file: order_to_waive_notice.pdf
  fields:
    - "trial_court_county": ${end_in_county(filing_county)}
    - "user": ${ users[0].name.full(middle="full") }
---    
attachment:
  variable name: motion_to_waive_notice[i]
  name: motion_to_waive_notice
  filename: motion_to_waive_notice
  skip undefined: True
  editable: False
  pdf template file: motion_to_waive_notice.pdf
  fields:      
    - "trial_court_county": ${ trial_court.address.county.upper() }
    - "user__1": ${ users[0].name.full(middle="full") }
    - "waiver_order_cb": ${ True if waiver_reason['order'] == True else '' }
    - "protective_order_op": ${ True if protective_order['op'] == True else '' }
    - "protective_order_snco": ${ True if protective_order['snco'] == True else '' }
    - "protective_order_cnco": ${ True if protective_order['cnco'] == True else '' }
    - "protective_order_criminal": ${ True if protective_order['other_criminal'] == True else '' }
    - "protective_order_bail": ${ True if protective_order['bail'] == True else '' }
    - "protective_order_other": ${ True if protective_order['other_order'] == True else '' }
    - "protective_order_other_state": ${ other_order_state if protective_order['other_order'] else '' }
    - "protective_order_minor_parent": ${ order_against_parents }
    - "waiver_hardship_cb": ${ True if waiver_reason['hardship'] == True else '' }
    - "hardship_text": ${ hardship_text }
    - "order_county_1": ${ orders[0].name.text if waiver_reason['order'] == True else '' }
    - "order_state_1": ${ orders[0].state if waiver_reason['order'] == True else '' }
    - "order_case_number_1": ${ orders[0].number if waiver_reason['order'] == True else '' }
    - "order_county_2": ${ orders[1].name.text if waiver_reason['order'] == True else '' }
    - "order_state_2": ${ orders[1].state if waiver_reason['order'] == True else '' }
    - "order_case_number_2": ${ orders[1].number if waiver_reason['order'] == True else '' }
    - "order_county_3": ${ orders[2].name.text if waiver_reason['order'] == True else '' }
    - "order_state_3": ${ orders[2].state if waiver_reason['order'] == True else '' }
    - "order_case_number_3": ${ orders[2].number if waiver_reason['order'] == True else '' }
    - "order_county_4": ${ orders[3].name.text if waiver_reason['order'] == True else '' }
    - "order_state_4": ${ orders[3].state if waiver_reason['order'] == True else '' }
    - "order_case_number_4": ${ orders[3].number if waiver_reason['order'] == True else '' }
    - "user_signature": ${ users[0].name.full(middle="full") if e_signature else '' }
    - "user__2": ${ users[0].name.full(middle="full") }
    - "user_address": ${ users[0].address.on_one_line(bare=True) }
    - "user_hide_address_cb": ${ True if use_safe_address else '' }
    - "user_phone": ${ phone_number_formatted(users[0].phone_number) }
    - "user_atty_number": ${ '' }
    - "user_email": ${ users[0].email if users[0].email_notice else '' }
---
attachment:
  variable name: notice_of_court_date[i]
  name: notice_of_court_date
  filename: notice_of_court_date
  skip undefined: True
  editable: True
  pdf template file: Notice_of_Court_Date_Minor2.pdf
  fields:  
    - "filing_county": ${end_in_county(filing_county)}
    - "user_name": ${ users[0].name.full(middle='full')}
    - "case_number": ${""}
    - "court_date": ${""}
    - "court_time": ${""}
    - "court_am": ${False}
    - "court_pm": ${False}
    - "courtroom": ${""}
    - "in_person": ${False}
    #- "courtroom_address": ${courthouse_info}
    - "remote": ${False}
    - "video_website": ${""}
    - "video_log_in": ${""}
    - "call_in_number": ${""}
    - "clerk_phone": ${""}
    - "clerk_website": ${""}
    - "other_parent_name": ${parent_list_generator[0].name.full(middle='full')}
    - "other_parent_address": ${parent_list_generator[0].address.on_one_line(bare=True) if parent_list_generator[0].address_known == True else ""}
    - "by_mail_1": ${True if parent_list_generator[0].receive_method == "mail" else False}
    - "by_sheriff_1": ${True if parent_list_generator[0].receive_method == "sheriff" else False}
    - "other_parent_notice_date": ${""}
    - "guardian_name": ${parent_list_generator[1].name.full(middle='full')}
    - "guardian_address": ${parent_list_generator[1].address.on_one_line(bare=True) if parent_list_generator[1].address_known == True else ""}
    - "by_mail_2": ${True if parent_list_generator[1].receive_method == "mail" else False}
    - "by_sheriff_2": ${True if parent_list_generator[1].receive_method == "sheriff" else False}
    - "guardian_notice_date": ${""}
    - "custodian_name": ${parent_list_generator[2].name.full(middle='full')}
    - "custodian_address": ${parent_list_generator[2].address.on_one_line(bare=True) if parent_list_generator[2].address_known == True else ""}
    - "by_mail_3": ${True if parent_list_generator[2].receive_method == "mail" else False}
    - "by_sheriff_3": ${True if parent_list_generator[2].receive_method == "sheriff" else False}
    - "custodian_notice_date": ${""}
    - "e_signature": ${ users[0].name.full(middle='full') if e_signature == True else ""}
    - "user_address": ${users[0].address.on_one_line(bare=True)}
    - "alternate_address": ${use_safe_address}
    - "user_phone": ${phone_number_formatted(users[0].phone_number)}
    - "user_email": ${users[0].email if users[0].has_email_address == True else ""}
---
attachment:
  variable name: notice_of_court_date_2[i]
  name: notice_of_court_date_2
  filename: notice_of_court_date_2
  skip undefined: True
  editable: True
  pdf template file: Notice_of_Court_Date_Minor2.pdf
  fields:  
    - "filing_county": ${end_in_county(filing_county)}
    - "user_name": ${ users[0].name.full(middle='full')}
    - "other_parent_name": ${parent_list_generator[3].name.full(middle='full')}
    - "other_parent_address": ${parent_list_generator[3].address.on_one_line(bare=True) if parent_list_generator[3].address_known == True else ""}
    - "by_mail_1": ${True if parent_list_generator[3].receive_method == "mail" else False}
    - "by_sheriff_1": ${True if parent_list_generator[3].receive_method == "sheriff" else False}
    - "other_parent_notice_date": ${""}
    - "guardian_name": ${parent_list_generator[4].name.full(middle='full')}
    - "guardian_address": ${parent_list_generator[4].address.on_one_line(bare=True) if parent_list_generator[4].address_known == True else ""}
    - "by_mail_2": ${True if parent_list_generator[4].receive_method == "mail" else False}
    - "by_sheriff_2": ${True if parent_list_generator[4].receive_method == "sheriff" else False}
    - "guardian_notice_date": ${""}
    - "custodian_name": ${parent_list_generator[5].name.full(middle='full')}
    - "custodian_address": ${parent_list_generator[5].address.on_one_line(bare=True) if parent_list_generator[5].address_known == True else ""}
    - "by_mail_3": ${True if parent_list_generator[5].receive_method == "mail" else False}
    - "by_sheriff_3": ${True if parent_list_generator[5].receive_method == "sheriff" else False}
    - "custodian_notice_date": ${""}
    - "e_signature": ${ users[0].name.full(middle='full') if e_signature == True else ""}
    - "user_address": ${users[0].address.on_one_line(bare=True)}
    - "alternate_address": ${use_safe_address}
    - "user_phone": ${phone_number_formatted(users[0].phone_number)}
    - "user_email": ${users[0].email if users[0].has_email_address == True else ""}
---
attachment:
  variable name: notice_of_court_date_3[i]
  name: notice_of_court_date_3
  filename: notice_of_court_date_3
  skip undefined: True
  editable: True
  pdf template file: Notice_of_Court_Date_Minor2.pdf
  fields:  
    - "filing_county": ${end_in_county(filing_county)}
    - "user_name": ${ users[0].name.full(middle='full')}
    - "other_parent_name": ${parent_list_generator[6].name.full(middle='full')}
    - "other_parent_address": ${parent_list_generator[6].address.on_one_line(bare=True) if parent_list_generator[6].address_known == True else ""}
    - "by_mail_1": ${True if parent_list_generator[6].receive_method == "mail" else False}
    - "by_sheriff_1": ${True if parent_list_generator[6].receive_method == "sheriff" else False}
    - "other_parent_notice_date": ${""}
    - "guardian_name": ${parent_list_generator[7].name.full(middle='full')}
    - "guardian_address": ${parent_list_generator[7].address.on_one_line(bare=True) if parent_list_generator[7].address_known == True else ""}
    - "by_mail_2": ${True if parent_list_generator[7].receive_method == "mail" else False}
    - "by_sheriff_2": ${True if parent_list_generator[7].receive_method == "sheriff" else False}
    - "guardian_notice_date": ${""}
    - "custodian_name": ${parent_list_generator[8].name.full(middle='full')}
    - "custodian_address": ${parent_list_generator[8].address.on_one_line(bare=True) if parent_list_generator[8].address_known == True else ""}
    - "by_mail_3": ${True if parent_list_generator[8].receive_method == "mail" else False}
    - "by_sheriff_3": ${True if parent_list_generator[8].receive_method == "sheriff" else False}
    - "custodian_notice_date": ${""}
    - "e_signature": ${ users[0].name.full(middle='full') if e_signature == True else ""}
    - "user_address": ${users[0].address.on_one_line(bare=True)}
    - "alternate_address": ${use_safe_address}
    - "user_phone": ${phone_number_formatted(users[0].phone_number)}
    - "user_email": ${users[0].email if users[0].has_email_address == True else ""}
---
attachment:
  variable name: notice_of_court_date_4[i]
  name: notice_of_court_date_4
  filename: notice_of_court_date_4
  skip undefined: True
  editable: True
  pdf template file: Notice_of_Court_Date_Minor2.pdf
  fields:  
    - "filing_county": ${end_in_county(filing_county)}
    - "user_name": ${ users[0].name.full(middle='full')}
    - "case_number": ${""}
    - "court_date": ${""}
    - "court_time": ${""}
    - "court_am": ${False}
    - "court_pm": ${False}
    - "courtroom": ${""}
    - "in_person": ${False}
    #- "courtroom_address": ${courthouse_info}
    - "remote": ${False}
    - "video_website": ${""}
    - "video_log_in": ${""}
    - "call_in_number": ${""}
    - "clerk_phone": ${""}
    - "clerk_website": ${""}
    - "other_parent_name": ${parent_list_generator[9].name.full(middle='full')}
    - "other_parent_address": ${parent_list_generator[9].address.on_one_line(bare=True) if parent_list_generator[9].address_known == True else ""}
    - "by_mail_1": ${True if parent_list_generator[9].receive_method == "mail" else False}
    - "by_sheriff_1": ${True if parent_list_generator[9].receive_method == "sheriff" else False}
    - "other_parent_notice_date": ${""}
    - "guardian_name": ${parent_list_generator[10].name.full(middle='full')}
    - "guardian_address": ${parent_list_generator[10].address.on_one_line(bare=True) if parent_list_generator[10].address_known == True else ""}
    - "by_mail_2": ${True if parent_list_generator[10].receive_method == "mail" else False}
    - "by_sheriff_2": ${True if parent_list_generator[10].receive_method == "sheriff" else False}
    - "guardian_notice_date": ${""}
    - "custodian_name": ${parent_list_generator[11].name.full(middle='full')}
    - "custodian_address": ${parent_list_generator[11].address.on_one_line(bare=True) if parent_list_generator[11].address_known == True else ""}
    - "by_mail_3": ${True if parent_list_generator[11].receive_method == "mail" else False}
    - "by_sheriff_3": ${True if parent_list_generator[11].receive_method == "sheriff" else False}
    - "custodian_notice_date": ${""}
    - "e_signature": ${ users[0].name.full(middle='full') if e_signature == True else ""}
    - "user_address": ${users[0].address.on_one_line(bare=True)}
    - "alternate_address": ${use_safe_address}
    - "user_phone": ${phone_number_formatted(users[0].phone_number)}
    - "user_email": ${users[0].email if users[0].has_email_address == True else ""}
---
attachment:
  variable name: notice_of_court_date_5[i]
  name: notice_of_court_date_5
  filename: notice_of_court_date_5
  skip undefined: True
  editable: True
  pdf template file: Notice_of_Court_Date_Minor2.pdf
  fields:  
    - "filing_county": ${end_in_county(filing_county)}
    - "user_name": ${ users[0].name.full(middle='full')}
    - "case_number": ${""}
    - "court_date": ${""}
    - "court_time": ${""}
    - "court_am": ${False}
    - "court_pm": ${False}
    - "courtroom": ${""}
    - "in_person": ${False}
    #- "courtroom_address": ${courthouse_info}
    - "remote": ${False}
    - "video_website": ${""}
    - "video_log_in": ${""}
    - "call_in_number": ${""}
    - "clerk_phone": ${""}
    - "clerk_website": ${""}
    - "other_parent_name": ${parent_list_generator[12].name.full(middle='full')}
    - "other_parent_address": ${parent_list_generator[12].address.on_one_line(bare=True) if parent_list_generator[12].address_known == True else ""}
    - "by_mail_1": ${True if parent_list_generator[12].receive_method == "mail" else False}
    - "by_sheriff_1": ${True if parent_list_generator[12].receive_method == "sheriff" else False}
    - "other_parent_notice_date": ${""}
    - "guardian_name": ${parent_list_generator[13].name.full(middle='full')}
    - "guardian_address": ${parent_list_generator[13].address.on_one_line(bare=True) if parent_list_generator[13].address_known == True else ""}
    - "by_mail_2": ${True if parent_list_generator[13].receive_method == "mail" else False}
    - "by_sheriff_2": ${True if parent_list_generator[13].receive_method == "sheriff" else False}
    - "guardian_notice_date": ${""}
    - "custodian_name": ${parent_list_generator[14].name.full(middle='full')}
    - "custodian_address": ${parent_list_generator[14].address.on_one_line(bare=True) if parent_list_generator[14].address_known == True else ""}
    - "by_mail_3": ${True if parent_list_generator[14].receive_method == "mail" else False}
    - "by_sheriff_3": ${True if parent_list_generator[14].receive_method == "sheriff" else False}
    - "custodian_notice_date": ${""}
    - "e_signature": ${ users[0].name.full(middle='full') if e_signature == True else ""}
    - "user_address": ${users[0].address.on_one_line(bare=True)}
    - "alternate_address": ${use_safe_address}
    - "user_phone": ${phone_number_formatted(users[0].phone_number)}
    - "user_email": ${users[0].email if users[0].has_email_address == True else ""}
---
attachment:
  variable name: notice_of_court_date_6[i]
  name: notice_of_court_date_6
  filename: notice_of_court_date_6
  skip undefined: True
  editable: True
  pdf template file: Notice_of_Court_Date_Minor2.pdf
  fields:  
    - "filing_county": ${end_in_county(filing_county)}
    - "user_name": ${ users[0].name.full(middle='full')}
    - "case_number": ${""}
    - "court_date": ${""}
    - "court_time": ${""}
    - "court_am": ${False}
    - "court_pm": ${False}
    - "courtroom": ${""}
    - "in_person": ${False}
    #- "courtroom_address": ${courthouse_info}
    - "remote": ${False}
    - "video_website": ${""}
    - "video_log_in": ${""}
    - "call_in_number": ${""}
    - "clerk_phone": ${""}
    - "clerk_website": ${""}
    - "other_parent_name": ${parent_list_generator[15].name.full(middle='full')}
    - "other_parent_address": ${parent_list_generator[15].address.on_one_line(bare=True) if parent_list_generator[15].address_known == True else ""}
    - "by_mail_1": ${True if parent_list_generator[15].receive_method == "mail" else False}
    - "by_sheriff_1": ${True if parent_list_generator[15].receive_method == "sheriff" else False}
    - "other_parent_notice_date": ${""}
    - "guardian_name": ${parent_list_generator[16].name.full(middle='full')}
    - "guardian_address": ${parent_list_generator[16].address.on_one_line(bare=True) if parent_list_generator[16].address_known == True else ""}
    - "by_mail_2": ${True if parent_list_generator[16].receive_method == "mail" else False}
    - "by_sheriff_2": ${True if parent_list_generator[16].receive_method == "sheriff" else False}
    - "guardian_notice_date": ${""}
    - "custodian_name": ${parent_list_generator[17].name.full(middle='full')}
    - "custodian_address": ${parent_list_generator[17].address.on_one_line(bare=True) if parent_list_generator[17].address_known == True else ""}
    - "by_mail_3": ${True if parent_list_generator[17].receive_method == "mail" else False}
    - "by_sheriff_3": ${True if parent_list_generator[17].receive_method == "sheriff" else False}
    - "custodian_notice_date": ${""}
    - "e_signature": ${ users[0].name.full(middle='full') if e_signature == True else ""}
    - "user_address": ${users[0].address.on_one_line(bare=True)}
    - "alternate_address": ${use_safe_address}
    - "user_phone": ${phone_number_formatted(users[0].phone_number)}
    - "user_email": ${users[0].email if users[0].has_email_address == True else ""}
---
attachment:
  variable name: order[i]
  name: order
  filename: order
  skip undefined: True
  editable: False
  pdf template file: Order_for_Name_Change_Minor.pdf
  fields:  
    - "filing_county": ${end_in_county(filing_county)}
    - "user_name": ${ users[0].name.full(middle='full')}
    - "case_number": ${""}
---
attachment:
  variable name: publication_notice[i]
  name: publication_notice
  filename: publication_notice
  skip undefined: True
  editable: False
  pdf template file: Publication_Notice_Minor2.pdf
  fields: 
    - "filing_county": ${end_in_county(filing_county)}
    - "user_name": ${ users[0].name.full(middle='full')}
    - "case_number": ${""}
    - "child_old_name_1": ${children[0].name.full(middle='full')}
    - "child_new_name_1": ${children[0].new.name.full(middle='full')}
    - "child_old_name_2": ${children[1].name.full(middle='full')}
    - "child_new_name_2": ${children[1].new.name.full(middle='full')}
    - "child_old_name_3": ${children[2].name.full(middle='full')}
    - "child_new_name_3": ${children[2].new.name.full(middle='full')}
    - "child_old_name_4": ${children[3].name.full(middle='full')}
    - "child_new_name_4": ${children[3].new.name.full(middle='full')}
    - "more_than_four_kids": ${True if children.number_gathered() > 4 else False}
    - "court_date": ${""}
    - "court_time": ${""}
    - "court_am": ${False}
    - "court_pm": ${False}
    - "courtroom": ${""}
    - "in_person": ${False}
    #- "courtroom_address": ${courthouse_info}
    - "remote": ${False}
    - "video_website": ${""}
    - "video_log_in": ${""}
    - "call_in_number": ${""}
    - "clerk_phone": ${""}
    - "clerk_website": ${""}
    - "e_signature": ${ users[0].name.full(middle='full') if e_signature == True else ""}
    - "user_address": ${users[0].address.on_one_line(bare=True)}
    - "alternate_address": ${use_safe_address}
    - "user_phone": ${phone_number_formatted(users[0].phone_number)}
    - "user_email": ${users[0].email if users[0].has_email_address == True else ""}
---
objects:
  - children[i].child_information: ALDocument.using(title="Child information", filename="child_information.pdf", has_addendum=False)
  - children[i].parents[j].parent_info_sheet: ALDocument.using(title="Parent information", filename="additional_parent.pdf", has_addendum=False)
  - parent_list_generator[i].notice_of_court_date: ALDocument.using(title="Notice of court date", filename="notice_of_court_date.pdf", has_addendum=False)
---
attachment:
  variable name: children[i].child_information[j]
  name: child_information
  filename: child_information
  skip undefined: True
  editable: False
  pdf template file: Request_for_Name_Change_Child_Information.pdf
  fields: 
    - "filing_county": ${end_in_county(filing_county)}
    - "user_name": ${ users[0].name.full(middle='full')}
    - "case_number": ${""}
    - "child_old_first": ${children[i].name.first}
    - "child_old_middle": ${children[i].name.middle}
    - "child_old_last": ${children[i].name.last if children[i].name.suffix == "" else (children[i].name.last + " " + children[i].name.suffix)}
    - "child_birth_date": ${children[i].birthdate}
    - "child_birth_place": ${(children[i].birth_place.city + ", " + end_in_county(children[i].birth_place.county) + ", " + children[i].birth_place.state) if children[i].birth_place.in_america == True else (children[i].birth_place.city + ", " + children[i].birth_place.country)}
    - "child_address": ${users[0].address.on_one_line(bare=True) if children[i].use_safe_address == True else children[i].address.on_one_line(bare=True)}
    - "alternate_address": ${children[i].use_safe_address}
    - "user_is_parent": ${True if children[i].user_relationship == "bio" or children[i].user_relationship == "adopt" else False}
    - "user_is_guardian": ${ True if children[i].user_relationship == "custody" else False}
    - "user_is_recognized": ${ True if children[i].user_relationship == "years" else False}
    - "child_unpardoned_misdemeanor_true": ${True if children[i].misdemeanors == True and children[i].misdemeanor_pardon == False else False}
    - "child_unpardoned_misdemeanor_false": ${False if children[i].misdemeanors == True and children[i].misdemeanor_pardon == False else True}
    - "child_arrest_true": ${ True if children[i].pending_arrests == True else False}
    - "child_arrest_false": ${ True if children[i].pending_arrests == False else False}
    - "child_pending_charge_true": ${ True if children[i].pending_charges == True else False}
    - "child_pending_charge_false": ${ True if children[i].pending_charges == False else False}
    - "child_unpardoned_felony_true": ${True if children[i].felonies == True and children[i].felony_pardon == False else False}
    - "child_unpardoned_felony_false": ${False if children[i].felonies == True and children[i].felony_pardon == False else True}
    - "child_registration_true": ${True if children[i].registry == True else False}
    - "child_registration_false": ${True if children[i].registry == False else False}
    - "marriage_exception": ${True if children[i].registry == True and children[i].registry_exceptions["Marriage"] == True else False}
    - "religious_exception": ${True if children[i].registry == True and children[i].registry_exceptions["Religious beliefs"] == True else False}
    - "victim_exception": ${True if children[i].registry == True and children[i].registry_exceptions["Status as a victim of trafficking"] == True else False}
    - "gender_exception": ${True if children[i].registry == True and children[i].registry_exceptions["Gender-related identity"] == True else False}
    - "child_identity_true": ${ True if children[i].id_theft == True else False}
    - "child_identity_false": ${ True if children[i].id_theft == False else False}
    - "conviction_description_1": ${children[i].convictions[0].name.text}
    - "conviction_date_1": ${ children[i].convictions[0].date}
    - "sentence_1": ${  children[i].convictions[0].sentence}
    - "completion_date_1": ${ children[i].convictions[0].completed_date}
    - "pardoned_1": ${children[i].convictions[0].pardoned}
    - "conviction_description_2": ${children[i].convictions[1].name.text}
    - "conviction_date_2": ${ children[i].convictions[1].date}
    - "sentence_2": ${  children[i].convictions[1].sentence}
    - "completion_date_2": ${ children[i].convictions[1].completed_date}
    - "pardoned_2": ${children[i].convictions[1].pardoned}
    - "conviction_description_3": ${children[i].convictions[2].name.text}
    - "conviction_date_3": ${ children[i].convictions[2].date}
    - "sentence_3": ${  children[i].convictions[2].sentence}
    - "completion_date_3": ${ children[i].convictions[2].completed_date}
    - "pardoned_3": ${children[i].convictions[2].pardoned}
    - "user_wishes": ${True if children[i].change_reasons["user_wants"] == True else False}
    - "child_wishes": ${True if children[i].change_reasons["child_wants"] == True else False}
    - "other_reason_check": ${True if children[i].change_reasons["other"] == True else False}
    - "other_reason_text": ${ children[i].other_reason if children[i].change_reasons["other"] == True else ""}
    - "no_other_parent": ${True if children[i].any_other_parents == False else False}
    - "yes_other_parent": ${True if children[i].any_other_parents == True else False}
    - "other_parent_first": ${children[i].parents[0].name.first if children[i].any_other_parents == True else ""}
    - "other_parent_middle": ${children[i].parents[0].name.middle if children[i].any_other_parents == True else ""}
    - "other_parent_last": ${children[i].parents[0].name.last if children[i].parents[0].name.suffix == "" else (children[i].parents[0].name.last + " " + children[i].parents[0].name.suffix)}
    - "other_parent_address": ${children[i].parents[0].address.on_one_line(bare=True) if children[i].parents[0].address_known == True and children[i].any_other_parents == True else "Unknown"}
    - "other_parent_disagree": ${ True if children[i].parents[0].agree == False and children[i].any_other_parents == True else False}
    - "other_parent_dont_know": ${True if children[i].parents[0].agree is None and children[i].any_other_parents == True else False}
    - "other_parent_agree": ${children[i].parents[0].agree if children[i].any_other_parents == True else False}
    - "third_parent_false": ${True if children[i].has_guardian == False else False}
    - "third_parent_true": ${children[i].has_guardian}
    - "custodian_true": ${children[i].has_custodian}
    - "custodian_false": ${ True if children[i].has_custodian == False else False}
---
attachment:
  variable name: children[i].parents[j].parent_info_sheet[k]
  name: parent_info_sheet
  filename: parent_info_sheet
  skip undefined: True
  editable: False
  pdf template file: Request_for_Name_Change_Additonal_Parent_Minor.pdf
  fields: 
    - "case_number": ${""}
    - "is_parent_or_guardian": ${True if children[i].parents[j].parent_type != "Custodian" else False}
    - "is_custodian": ${True if children[i].parents[j].parent_type == "Custodian" else False}
    - "parental_first": ${children[i].parents[j].name.first}
    - "parental_middle": ${children[i].parents[j].name.middle}
    - "parental_last": ${children[i].parents[j].name.last if children[i].parents[j].name.suffix == "" else (children[i].parents[j].name.last + " " + children[i].parents[j].name.suffix)}
    - "parental_address": ${children[i].parents[j].address.on_one_line(bare=True) if children[i].parents[j].address_known else "Unknown"}
    - "certified_or_sheriff": ${True if children[i].parents[j].address_known == True and children[i].parents[j].agree != True else False}
    - "publication_notice": ${True if children[i].parents[1].address_known == False and children[i].parents[j].agree != True and any_risk == False else False}
    - "rights_terminated": ${False}
    - "disagrees": ${ True if children[i].parents[j].agree == False else False}
    - "dont_know": ${True if children[i].parents[j].agree is None else False}
    - "agrees": ${children[i].parents[j].agree}
---
attachment:
  variable name: parent_list_generator[i].notice_of_court_date[j]
  name: notice_of_court_date
  filename: notice_of_court_date
  skip undefined: True
  editable: False
  pdf template file: Notice_of_Court_Date_Minor2.pdf
  fields:  
    - "filing_county": ${end_in_county(filing_county)}
    - "user_name": ${ users[0].name.full(middle='full')}
    - "case_number": ${""}
    - "court_date": ${""}
    - "court_time": ${""}
    - "court_am": ${False}
    - "court_pm": ${False}
    - "courtroom": ${""}
    - "in_person": ${False}
    #- "courtroom_address": ${courthouse_info}
    - "remote": ${False}
    - "video_website": ${""}
    - "video_log_in": ${""}
    - "call_in_number": ${""}
    - "clerk_phone": ${""}
    - "clerk_website": ${""}
    - "other_parent_name": ${parent_list_generator[i].name.full(middle='full')}
    - "other_parent_address": ${parent_list_generator[i].address.on_one_line(bare=True) if parent_list_generator[i].address_known == True else ""}
    - "by_mail_1": ${True if parent_list_generator[i].receive_method == "mail" else False}
    - "by_sheriff_1": ${True if parent_list_generator[i].receive_method == "sheriff" else False}
    - "other_parent_notice_date": ${""}
    - "guardian_name": ${parent_list_generator[i+1].name.full(middle='full')}
    - "guardian_address": ${parent_list_generator[i+1].address.on_one_line(bare=True) if parent_list_generator[i+1].address_known == True else ""}
    - "by_mail_2": ${True if parent_list_generator[i+1].receive_method == "mail" else False}
    - "by_sheriff_2": ${True if parent_list_generator[i+1].receive_method == "sheriff" else False}
    - "guardian_notice_date": ${""}
    - "custodian_name": ${parent_list_generator[i+2].name.full(middle='full')}
    - "custodian_address": ${parent_list_generator[i+2].address.on_one_line(bare=True) if parent_list_generator[i+2].address_known == True else ""}
    - "by_mail_3": ${True if parent_list_generator[i+2].receive_method == "mail" else False}
    - "by_sheriff_3": ${True if parent_list_generator[i+2].receive_method == "sheriff" else False}
    - "custodian_notice_date": ${""}
    - "e_signature": ${ users[0].name.full(middle='full') if e_signature == True else ""}
    - "user_address": ${users[0].address.on_one_line(bare=True)}
    - "alternate_address": ${use_safe_address}
    - "user_phone": ${phone_number_formatted(users[0].phone_number)}
    - "user_email": ${users[0].email if users[0].has_email_address == True else ""}
---
#The next questions will be in the shared yml, this is for testing purposes
id: criminal history intro
generic object: ALPeopleList
continue button field: x[i].criminal_history_intro
question: |
  % if interview_type == 'adult':
    % if i == 0:
    Criminal history
    % else:
    Spouse's criminal history
    % endif
  % else:
  Criminal history
  % endif
subquestion: |
  % if interview_type == 'adult':
    % if i == 0:
    To request a name change in Illinois, you need to tell the court about any criminal history you may have.
    % else:
    To request a name change in Illinois, your spouse needs to tell the court about any criminal history they may have.
    % endif
  % else:
    To request a name change for a child, you must tell the court about any criminal history the child may have.
  % endif
  
  Having any criminal history does not prevent a person from getting a legal name change. Only certain offenses can affect the name change request. The next screens will guide you through the process.
---
id: pending arrests
generic object: ALPeopleList
question: |
  % if interview_type == 'adult':
    % if i == 0:
    Do you have any arrests for which charges have not been filed?
    % else:
    Does your spouse have any arrests for which charges have not been filed?
    % endif
  % else:
  Does ${x[i].new.name.full(middle='full')} (AKA ${x[i].name.full(middle='full')}) have any arrests for which charges have not been filed?
  % endif
subquestion: |
  % if interview_type == 'adult':
  If you were arrested but did not go to court or see a judge, then you were probably not charged with a crime. That means charges are pending.
  % else:
  If ${x[i].new.name.full(middle='full')} (AKA ${x[i].name.full(middle='full')}) was arrested but did not go to court or see a judge, then they were probably not charged with a crime. That means charges are pending.
  % endif
fields:
  - no label: x[i].pending_arrests
    datatype: yesnoradio
---
id: pending charges
generic object: ALPeopleList
question: |
  % if interview_type == 'adult':
    % if i == 0:
    Do you have any pending misdemeanor or felony charges?
    % else:
    Does your spouse have any pending misdemeanor or felony charges?
    % endif
  % else:
  Does ${x[i].new.name.full(middle='full')} (AKA ${x[i].name.full(middle='full')}) have any pending misdemeanor or felony charges?
  % endif
subquestion: |
  % if interview_type == 'adult':
    % if i == 0:
    In other words, do you have any ongoing criminal cases against you for misdemeanor or felony offenses?
    % else:
    In other words, does your spouse have any ongoing criminal cases against them for misdemeanor or felony offenses?
    % endif
  % else:
    In other words, does ${x[i].new.name.full(middle='full')} (AKA ${x[i].name.full(middle='full')}) have any ongoing criminal cases against them for misdemeanor or felony offenses?
  % endif
fields:
  - no label: x[i].pending_charges
    datatype: yesnoradio
---
id: misdemeanors
generic object: ALPeopleList
question: |
  % if interview_type == 'adult':
    % if i == 0:
    Do you have any convictions or were you placed on probation for any misdemeanors?
    % else:
    Does your spouse have any convictions or were they placed on probation for any misdemeanors?
    % endif
  % else:
  Does ${x[i].new.name.full(middle='full')} (AKA ${x[i].name.full(middle='full')}) have any convictions or were they placed on probation for any misdemeanors?
  % endif
subquestion: |
  These can be misdemeanors in Illinois or any other state.
fields:
  - no label: x[i].misdemeanors
    datatype: yesnoradio
  - Were all of these misdemeanors pardoned?: x[i].misdemeanor_pardon
    datatype: yesnoradio
    show if:
      variable: x[i].misdemeanors
      is: True
---
id: felonies
generic object: ALPeopleList
question: |
  % if interview_type == 'adult':
    % if i == 0:
    Do you have any convictions or were you placed on probation for any felonies?
    % else:
    Does your spouse have any convictions or were they placed on probation for any felonies?
    % endif
  % else:
  Does ${x[i].new.name.full(middle='full')} (AKA ${x[i].name.full(middle='full')}) have any convictions or were they placed on probation for any felonies?
  % endif
subquestion: |
  These can be felonies in Illinois or any other state.
fields:
  - no label: x[i].felonies
    datatype: yesnoradio
  - Were all of these felonies pardoned?: x[i].felony_pardon
    datatype: yesnoradio
    show if:
      variable: x[i].felonies
      is: True
---
id: registries
generic object: ALPeopleList
question: |
  % if interview_type == 'adult':
    % if i == 0:
    Do you have any convictions or were you placed on probation for a crime that required you register?
    % else:
    Does your spouse have any convictions or were they placed on probation for a crime that required them to register?
    % endif
  % else:
  Does ${x[i].new.name.full(middle='full')} (AKA ${x[i].name.full(middle='full')}) have any convictions or were they placed on probation for a crime that required them register?
  % endif
subquestion: |
  These include crimes that require registration under the:
  
  * Sex Offender Registration Act
  * Murderer and Violent Offender Against Youth Act, or
  * Arsonist Registration Act.

  % if interview_type == 'adult':
    % if i == 0:
    **Important**: If you were placed on any of these registries and have not been pardoned, **it is a felony to file a petition to change your name** unless one of these exceptions apply:
    % else:
    **Important**: If they were placed on any of these registries and have not been pardoned, **it is a felony to file a petition to change your name** unless one of these exceptions apply:
    % endif
  % else:
  **Important**: If they were placed on any of these registries and have not been pardoned, **it is a felony to file a petition to change your name** unless one of these exceptions apply:
  % endif
  
  * Marriage
  * Religious beliefs
  * Status as a victim of trafficking
  * **{Gender-related identity}**

  These can be Illinois registries or similar registries in any other state.
fields:
  - no label: x[i].registry
    datatype: yesnoradio
  - Which of these exceptions apply?: x[i].registry_exceptions
    datatype: checkboxes
    choices:
      - Marriage: Marriage 
      - Religious beliefs: Religious beliefs
      - Status as a victim of trafficking: Status as a victim of trafficking
      - Gender-related identity: Gender-related identity
    show if:
      variable: x[i].registry
      is: True
---
terms:
  - "Gender-related identity": |
      The Illinois Human Rights Act states that gender-identity does not need to be the same as the  sex designated at birth.
  - "Offenses requiring registration": |
      These include crimes that require registration under the:
  
       * Sex Offender Registration Act
       * Murderer and Violent Offender Against Youth Act, or
       * Arsonist Registration Act.
---
id: registry notification requirement info
continue button field: registry_notification
question: |
  Notify law enforcement after a name change if required to register
subquestion: |
  Anyone who is required to register and is granted a legal name change must notify the law enforcement agency with whom they are registered of the name change.

  Notification deadlines depend on the type of registration:

  * Sex Offender Registration Act - notify within 3 days
  * Murderer and Violent Offender Against Youth Act - notify within 5 days
  * Arsonist Registration Act - notify within 10 days
---
id: id theft
generic object: ALPeopleList
question: |
  % if interview_type == 'adult':
    % if i == 0:
    Do you have any convictions or were you placed on probation for identity theft?
    % else:
    Does your spouse have any convictions or were they placed on probation for identity theft?
    % endif
  % else:
  Does ${x[i].new.name.full(middle='full')} (AKA ${x[i].name.full(middle='full')}) have any convictions or were they placed on probation for identity theft?
  % endif
subquestion: |
  This includes **identity theft** or **aggravated identity theft**.
  
  These can be in Illinois or any other state.

  % if interview_type == 'adult':
    % if i == 0:
    You can still request a name change even if you answer **Yes**.
    % else:
    Your spouse can still request a name change even if you answer **Yes**.
    % endif
  % else:
  You can still request a name change for ${x[i].new.name.full(middle='full')} (AKA ${x[i].name.full(middle='full')}) even if you answer **Yes**.
  % endif
fields:
  - no label: x[i].id_theft
    datatype: yesnoradio
---
id: conviction intro
generic object: ALPeopleList
continue button field: x[i].conviction_intro
question: |
  Criminal history details
subquestion: |
  % if interview_type == 'adult':
    % if i == 0:
    For these convictions or probations, you must enter more information on your name change request:
    % else:
    For these convictions or probations, you must enter more information on your spouse's name change request:
    % endif
  % else:
  For these convictions or probations of ${x[i].new.name.full(middle='full')} (AKA ${x[i].name.full(middle='full')}), you must enter more information:
  % endif

  % if x[i].felonies:
   * Felony convictions or probations
  % endif
  % if x[i].registry:
   * **{Offenses requiring registration}**
  % endif
  % if x[i].id_theft:
   * Identification theft or Aggravated identity theft
  % endif

---
id: conviction details
generic object: ALPeopleList
question: |
  % if j == 0:
  Conviction or probation details
  % else:
  More conviction or probation details
  % endif
subquestion: |
  % if interview_type == 'adult':
    % if i == 0:
    For any of the following convictions or probations, you must enter more information on your name change request:
    % else:
    For any of the following convictions or probations, you must enter more information on your spouse's name change request:
    % endif
  % else:
  For any of the following convictions or probations of ${x[i].new.name.full(middle='full')} (AKA ${x[i].name.full(middle='full')}), you must enter more information:
  % endif
  
  % if x[i].felonies:
   * Felony convictions or probations
  % endif
  % if x[i].registry:
   * **{Offenses requiring registration}**
  % endif
  % if x[i].id_theft:
   * Identification theft or Aggravated identity theft
  % endif
fields:
  - Offense description: x[i].convictions[j].name.text
    maxlength: 30
  - Date of conviction or probation: x[i].convictions[j].date
    datatype: date
    max: ${ today().format("yyyy-MM-dd") }
    min: |
      % if interview_type == 'adult':
      ${today().minus(years=110)}
      % else:
      ${x[i].birth_date}
      % endif
  - Sentence received: x[i].convictions[j].sentence
    maxlength: 30
  - Date sentence completed: x[i].convictions[j].completed_date
    datatype: date
    max: ${ today().format("yyyy-MM-dd") }
    min: |
      % if interview_type == 'adult':
      ${today().minus(years=110)}
      % else:
      ${x[i].birth_date}
      % endif
  - Pardoned?: x[i].convictions[j].pardoned
    datatype: yesnoradio
validation code: |
  if x[i].convictions[j].completed_date < x[i].convictions[j].date:
    validation_error("Date sentence completed must be on or after date of conviction or probation. Please adjust your answers.", field="x[i].convictions[j].completed_date")

---
id: any other convictions
generic object: ALPeopleList
question: |
  Are there other convictions or probations?
subquestion: |
  % if interview_type == 'adult':
    % if i == 0:
    For any of the following convictions or probations, you must enter more information on your name change request:
    % else:
    For any of the following convictions or probations, you must enter more information on your spouse's name change request:
    % endif
  % else:
  For these convictions or probations of ${x[i].new.name.full(middle='full')} (AKA ${x[i].name.full(middle='full')}), you must enter more information on your name change request:
  % endif

  % if x[i].felonies:
   * Felony convictions or probations
  % endif
  % if x[i].registry:
   * **{Offenses requiring registration}**
  % endif
  % if x[i].id_theft:
   * Identification theft or Aggravated identity theft
  % endif
  
  % if x[i].convictions.number() == 1:
  You can enter up to 17 convictions or probations in total. So far you have told us about ${ x[i].convictions.number() } offense:
  % else:
  You can enter up to 17 convictions or probations in total. So far you have told us about ${ x[i].convictions.number() } offenses:
  % endif
  
  % for conviction in x[i].convictions:
   * ${conviction.name.text} on ${conviction.date}
  % endfor
fields:
  - "Add another conviction or probation?": x[i].convictions.there_is_another
    datatype: yesnoradio
---
id: children there is another
question: |
  Do you want to change the name of another child?
subquestion: |
  So far you have told us about ${comma_and_list(children)}.
fields:
  - no label: children.there_is_another
    datatype: yesnoradio
---
id: parents there is another
question: |
  Does ${children[i].new.name.full(middle='full')} (AKA ${children[i].name.full(middle='full')}) have another parent, guardian, or custodian?
subquestion: |
  So far you have told us about ${comma_and_list(children[i].parents)}.
fields:
  - no label: children[i].parents.there_is_another
    datatype: yesnoradio
---
id: registry kickout
event: registry_kickout
question: |
  Sorry
subquestion: |
  A person who committed crimes that require registration and is not pardoned cannot request a name change with this program. It may result in a felony.
  
  These include crimes that require registration under the:
  
  * Sex Offender Registration Act
  * Murderer and Violent Offender Against Youth Act, or
  * Arsonist Registration Act.
  
  Click **Back** if you made a mistake. Or you can talk with a lawyer to discuss your options. Use **[Get Legal Help](https://www.illinoislegalaid.org/get-legal-help)** to find free or low-cost legal services in your area.
buttons:
  - Exit: exit
  - Restart: restart
---
id: review screen
event: review_answers
question: |
  Review screen
subquestion: |
  Edit your answers below.
review: 
  - Edit: started_living_in_illinois
    button: |
      **When did you start living in Illinois?**
      ${started_living_in_illinois}
  - Edit: users[0].name.first
    button: |
      **Your name:**
      ${users[0].name.full(middle='full')}
  - Edit: use_safe_address 
    button: |
      **Do you want to use an alternate mailing address?**
      ${word(yesno(use_safe_address))}
  - Edit: users[0].address.address
    button: |
      % if use_safe_address == True:
      **Alternate mailing address:**
      % else:
      **Your address:**
      % endif
      ${users[0].address.on_one_line(bare=True)}
  - Edit: users[0].has_email_address
    button: |
      **Your contact information:**
      % if users[0].phone_number != "" and users[0].has_email_address == True:
      
      * Phone number: ${phone_number_formatted(users[0].phone_number)}
      * Email address: ${users[0].email}
      % elif users[0].phone_number != "" and users[0].has_email_address == False:
      ${phone_number_formatted(users[0].phone_number)}
      % elif users[0].phone_number == "" and users[0].has_email_address == True:
      ${users[0].email}
      % endif
  - Edit: children.revisit
    button: |
      **Children: (Edit to change names, addresses, and other guardians)**

      % for my_var in children:
        * ${ my_var.new.name.full(middle="full")} (AKA ${my_var.name.full(middle='full')})
      % endfor
  - Edit: request_waiver
    button: |
      % if children.number_gathered() == 1:
      **Are you concerned publishing notice of ${children[0].new.name.full(middle='full')} (AKA ${children[0].name.full(middle='full')})'s name change would put them at risk?**
      % else:
      **Are you concerned publishing notice of these name changes would put your children at risk?**
      % endif
      ${word(yesno(request_waiver))}
    show if: child_notice_would_be_published == True and any_risk == False
  - Edit:  waiver_reason
    button: |
      **Why do you need a notice waiver?**
      
      % if waiver_reason['order'] == True:
      * I have or did have protection from a court order.
      % endif
      % if waiver_reason['hardship'] == True:
      * I need a waiver of notice and publication of name change because it would be a hardship for the person who is changing their name.
      % endif
    show if: any_risk == True or (child_notice_would_be_published == True and showifdef('request_waiver') == True)
  - Edit:  protective_order
    button: |
      **What kind of court protection do or did you have?**
      
      % if protective_order['op'] == True:
      * An Order of Protection
      % endif
      % if protective_order['snco'] == True:
      * A Stalking No Contact Order
      % endif
      % if protective_order['cnco'] == True:
      * A Civil No Contact Order
      % endif
      % if protective_order['other_criminal'] == True:
      * A Protective order in someone else's criminal case
      % endif
      % if protective_order['bail'] == True:
      * Being a protected person under someone else's bail conditions
      % endif
      % if protective_order['other_order'] == True:
      * A similar protective order in ${other_order_state}
      % endif
    show if: waiver_reason['order'] == True and (any_risk == True or (child_notice_would_be_published == True and request_waiver == True))
  - Edit: order_against_parents
    button: |
       **Is the protective order against another parent, guardian, or custodian?**
       ${word(yesno(order_against_parents))}
    show if: protective_order.any_true() == True and (waiver_reason['order'] == True and (any_risk == True or (child_notice_would_be_published == True and request_waiver == True))) 
  - Edit: hardship_text
    button: |
      **Notice and publication would be a hardship because:**
      ${hardship_text}
    show if: waiver_reason['hardship'] == True and (any_risk == True or (child_notice_would_be_published == True and request_waiver == True))
  - label: Edit
    fields:
      - trial_court_index
      - recompute:
        - filing_county
    button: |
      **Which county are you filing the name change in?**
      ${end_in_county(filing_county)}
  #- Edit: cook_district
  #  button: |
  #    **In which Cook County courthouse is your case?**
  #    % if cook_district == "15":
  #    First Municipal District, Daley Center, 50 W. Washington Street, Chicago
  #    % elif cook_district == "16":
  #    Second Municipal District, 5600 Old Orchard Road, Skokie
  #    % elif cook_district == "17":
  #    Third Municipal District, 2121 Euclid Avenue, Rolling Meadows
  #    % elif cook_district == "18":
  #    Fourth Municipal District, 1500 Maybrook Drive, Maywood
  #    % elif cook_district == "19":
  #    Fifth Municipal District, 10220 S. 76th Avenue, Bridgeview
  #    % elif cook_district == "20":
  #    Sixth Municipal District, 16501 South Kedzie Parkway, Markham
  #    % endif
  #  show if: trial_court_index == -1 and child_notice_would_be_published == True and (any_risk == True or request_waiver == False)
  - Edit: e_signature
    button: |
      **Do you want to add your e-signature to your forms?**
      ${word(yesno(e_signature))}
---
section: Children and parents
id: children review screen
event: section_children
question: |
  Children and parents
subquestion: |
  Edit your answers below.
review:
  - Edit: children.revisit
    button: |
      **Children: (Edit to change names, addresses, and other guardians)**

      % for my_var in children:
        * ${ my_var.new.name.full(middle="full")} (AKA ${my_var.name.full(middle='full')})
      % endfor
  - Edit: request_waiver
    button: |
      % if children.number_gathered() == 1:
      **Are you concerned publishing notice of ${children[0].new.name.full(middle='full')} (AKA ${children[0].name.full(middle='full')})'s name change would put them at risk?**
      % else:
      **Are you concerned publishing notice of these name changes would put your children at risk?**
      % endif
      ${word(yesno(request_waiver))}
    show if: child_notice_would_be_published == True and any_risk == False
  - Edit:  waiver_reason
    button: |
      **Why do you need a notice waiver?**
      
      % if waiver_reason['order'] == True:
      * I have or did have protection from a court order.
      % endif
      % if waiver_reason['hardship'] == True:
      * I need a waiver of notice and publication of name change because it would be a hardship for the person who is changing their name.
      % endif
    show if: any_risk == True or (child_notice_would_be_published == True and showifdef('request_waiver') == True)
  - Edit:  protective_order
    button: |
      **What kind of court protection do or did you have?**
      
      % if protective_order['op'] == True:
      * An Order of Protection
      % endif
      % if protective_order['snco'] == True:
      * A Stalking No Contact Order
      % endif
      % if protective_order['cnco'] == True:
      * A Civil No Contact Order
      % endif
      % if protective_order['other_criminal'] == True:
      * A Protective order in someone else's criminal case
      % endif
      % if protective_order['bail'] == True:
      * Being a protected person under someone else's bail conditions
      % endif
      % if protective_order['other_order'] == True:
      * A similar protective order in ${other_order_state}
      % endif
    show if: waiver_reason['order'] == True and (any_risk == True or (child_notice_would_be_published == True and request_waiver == True))
  - Edit: order_against_parents
    button: |
       **Is the protective order against another parent, guardian, or custodian?**
       ${word(yesno(order_against_parents))}
    show if: protective_order.any_true() == True and (waiver_reason['order'] == True and (any_risk == True or (child_notice_would_be_published == True and request_waiver == True))) 
  - Edit: hardship_text
    button: |
      **Notice and publication would be a hardship because:**
      ${hardship_text}
    show if: waiver_reason['hardship'] == True and (any_risk == True or (child_notice_would_be_published == True and request_waiver == True))
---
#add action is removed from subquestion due to issues with list comprehension in ALDocumentBundles. For posterity, here is the line:
#${ children.add_action() }
id: children review
continue button field: children.revisit
question: |
  Edit the information about the children
subquestion: |
  If you have reached the end of the interview and need to add or delete a child, you will need to restart this program.

  ${ children.table }
---
#add action is removed from subquestion due to issues with list comprehension in ALDocumentBundles. For posterity, here is the line:
#${ children[i].parents.add_action() }
id: parents review
continue button field: children[i].parents.revisit
question: |
  Edit the information about ${children[i].new.name.full(middle='full')} (AKA ${children[i].name.full(middle='full')})'s parents, guardians, and custodians
subquestion: |
  If you have reached the end of the interview and need to add or delete a parent, guardian, or custodian, you will need to restart this program.
  
  ${ children[i].parents.table }
---
# delete buttons are set to false due to ALDocumentBundle list comprehension issues
id: children table
table: children.table
rows: children
columns:
  - Current name: |
      row_item.name.full(middle="full") if defined("row_item.name.first") else ""
  - New name, address, and other guardians: |
      action_button_html(url_action(row_item.attr_name("review_child")), label="Edit", icon="pencil-alt")
delete buttons: False
confirm: True
---
#action_button_html(url_action(row_item.attr_name("review_parent")), label="Edit", icon="pencil-alt")
# delete buttons are set to false due to ALDocumentBundle list comprehension issues
id: parent table
table: children[i].parents.table
rows: children[i].parents
columns:
  - Name: |
      row_item.name.full(middle='full') if defined("row_item.name.first") else ""
  - Address and other information: |
      action_button_html(url_action(row_item.attr_name("review_parent")), label="Edit", icon="pencil-alt")
delete buttons: False
confirm: True
---
id: child review
continue button field: x.review_child
generic object: ALIndividual
question: |
  Edit ${x.new.name.full(middle='full')} (AKA ${x.name.full(middle='full')})'s information
review: 
  - Edit: x.name.first
    button: |
      **Current name:**
      ${x.name.full(middle='full')}
  - Edit: x.new.name.first
    button: |
      **New name:**
      ${x.new.name.full(middle='full')}
  - Edit: x.birthdate
    button: |
      **Birth date:**
      ${x.birthdate}
  - Edit: x.user_relationship
    button: |
      **Your relationship to ${x.new.name.full(middle='full')} (AKA ${x.name.full(middle='full')}):**
      % if x.user_relationship == "bio":
      Biological parent
      % elif x.user_relationship == "adopt":
      Adoptive parent
      % elif x.user_relationship == "custody":
      Legal guardian
      % elif x.user_relationship == "years":
      They have lived in my home for 3 years and are recognized as my adopted child.
      % elif x.user_relationship == "other":
      Other
      % endif
  - Edit: x.pending_arrests
    button: |
      **Does ${x.new.name.full(middle='full')} (AKA ${x.name.full(middle='full')}) have any arrests for which charges have not been filed?**
      ${word(yesno(x.pending_arrests))}
  - Edit: x.pending_charges
    button: |
      **Does ${x.new.name.full(middle='full')} (AKA ${x.name.full(middle='full')}) have any pending misdemeanor or felony charges?**
      ${word(yesno(x.pending_charges))}
  - Edit: x.misdemeanors
    button: |
      **Does ${x.new.name.full(middle='full')} (AKA ${x.name.full(middle='full')}) have any convictions or were they placed on probation for any misdemeanors?**
      % if x.misdemanors == False:
      No
      % else:
      % if x.misdemeanor_pardon == True:
      Yes, and they have been pardoned of them
      % else:
      Yes, and they have not been pardoned for all of them
      % endif
      % endif
  - Edit: x.felonies
    button: |
      **Does ${x.new.name.full(middle='full')} (AKA ${x.name.full(middle='full')}) have any convictions or were they placed on probation for any felonies?**
      % if x.felonies == False:
      No
      % else:
      % if x.felony_pardon == True:
      Yes, and they have been pardoned of them
      % else:
      Yes, and they have not been pardoned for all of them
      % endif
      % endif
  - Edit: x.registry
    button: |
      **Do ${x.new.name.full(middle='full')} (AKA ${x.name.full(middle='full')}) have any convictions or were they placed on probation for a crime that required them register?**
      % if x.registry == False:
      No
      % elif x.registry_exceptions.all_false():
      Yes
      % else:
      Yes, but the following exception or exceptions apply:
      
      % if x.registry_exceptions['Marriage']:
      * Marriage
      % endif
      % if x.registry_exceptions['Religious beliefs']:
      * Religious beliefs
      % endif
      % if x.registry_exceptions['Status as a victim of trafficking']:
      * Status as a victim of trafficking
      % endif
      % if x.registry_exceptions['Gender-related identity']:
      * Gender-related identity
      % endif
      % endif
  - Edit: x.id_theft
    button: |
      **Does ${x.new.name.full(middle='full')} (AKA ${x.name.full(middle='full')}) have any convictions or were they placed on probation for identity theft?**
      ${word(yesno(x.id_theft))}
  - Edit: x.change_reasons
    button: |
      **Why are you changing this child's name from "${x.name.full(middle='full')}" to "${x.new.name.full(middle='full')}?"**
      
      % if x.change_reasons['user_wants']:
      * I want to change their name.
      % endif
      % if x.change_reasons['child_wants']:
      * They want to change their name.
      % endif
      % if x.change_reasons['other']:
      * ${x.other_reason}
      % endif
  - Edit: x.birth_place.in_america
    button: |
      **${x.new.name.full(middle='full')} (AKA ${x.name.full(middle='full')})'s birth place:**
      % if x.birth_place.in_america == True:
      ${x.birth_place.city}, ${end_in_county(x.birth_place.county)}, ${x.birth_place.state}
      % else:
      ${x.birth_place.city}, ${x.birth_place.country}
      % endif
  - Edit: x.use_safe_address
    button: |
      **Do you want to use ${users[0].address.on_one_line(bare=True)} as ${x.new.name.full(middle='full')} (AKA ${x.name.full(middle='full')})'s address?**
      ${word(yesno(x.use_safe_address))}
    show if: use_safe_address 
  - Edit: x.address.address
    button: |
      **${x.new.name.full(middle='full')} (AKA ${x.name.full(middle='full')})'s address:**
      ${x.address.on_one_line(bare=True)}
    show if: use_safe_address == False or x.use_safe_address == False
  - Edit: x.any_other_parents
    button: |
     **Does ${x.new.name.full(middle='full')} (AKA ${x.name.full(middle='full')}) have any parents, guardians, or custodians other than you?**
     ${word(yesno(x.any_other_parents))}
  - Edit: x.parents.revisit
    button: |
      **Parents: (Edit to change names, addresses, and other information)**

      % for my_var in x.parents:
        * ${ my_var.name.full(middle="full")}
      % endfor
    show if: x.any_other_parents
---
id: parent review
continue button field: x.review_parent
generic object: ALIndividual
question: |
  Edit ${x.name.full(middle='full')}'s information
review: 
  - Edit: x.name.first
    button: |
      **Name of parent, guardian, or custodian:**
      ${x.name.full(middle='full')}   
  - Edit: x.parent_type
    button: |
      **Is ${x.name.full(middle='full')} a parent, guardian, or custodian?**
      ${x.parent_type}
  - Edit: x.agree
    button: |
      **Does ${x.name.full(middle='full')} agree to the name change?**
      % if x.agree != True and x.agree != False:
      I don't know
      % else:
      ${word(yesno(x.agree))}
      % endif
  - Edit: x.address_known
    button: |
      **Do you know ${x.name.full(middle='full')}'s address?**
      ${word(yesno(x.address_known))}
  - Edit: x.address.address
    button: |
      **${x.name.full(middle='full')}'s address:**
      ${x.address.on_one_line(bare=True)}
    show if: x.address_known == True
  - Edit: x.risk_check 
    button: |
      **Are you worried that giving notice to ${x.name.full(middle='full')} of the name change request would put your child at risk?**
      ${word(yesno(x.risk_check))}
    show if: x.agree != True
  - Edit: x.receive_method
    button: |
      **How will you give ${x.name.full(middle='full')} notice of this name change request?**
      % if x.receive_method == "mail":
      I will give notice of this Request and the scheduled court date by certified mail.
      % elif x.receive_method == "sheriff":
      I will give notice of this Request and the scheduled court date by service of process by sheriff.
      % elif x.receive_method == "newspaper":
      I will publish notice of this Request in a local newspaper.
      % endif
    show if: x.agree != True and x.risk_check == False and x.address_known == False
---
section: Your information
id: user review screen
event: section_user
question: |
  Your information
subquestion: |
  Edit your answers below.
review:
  - Edit: started_living_in_illinois
    button: |
      **When did you start living in Illinois?**
      ${started_living_in_illinois}
  - Edit: users[0].name.first
    button: |
      **Your name:**
      ${users[0].name.full(middle='full')}
  - Edit: use_safe_address 
    button: |
      **Do you want to use an alternate mailing address?**
      ${word(yesno(use_safe_address))}
  - Edit: users[0].address.address
    button: |
      % if use_safe_address == True:
      **Alternate mailing address:**
      % else:
      **Your address:**
      % endif
      ${users[0].address.on_one_line(bare=True)}
  - Edit: users[0].has_email_address
    button: |
      **Your contact information:**
      % if users[0].phone_number != "" and users[0].has_email_address == True:
      
      * Phone number: ${phone_number_formatted(users[0].phone_number)}
      * Email address: ${users[0].email}
      % elif users[0].phone_number != "" and users[0].has_email_address == False:
      ${phone_number_formatted(users[0].phone_number)}
      % elif users[0].phone_number == "" and users[0].has_email_address == True:
      ${users[0].email}
      % endif
---
section: Filing information
id: filing review screen
event: section_filing
question: |
  Filing information
subquestion: |
  Edit your answers below.
review:
  - label: Edit
    fields:
      - trial_court_index
      - recompute:
        - filing_county
    button: |
      **Which county are you filing the name change in?**
      ${end_in_county(filing_county)}
  #- Edit: cook_district
  #  button: |
  #    **In which Cook County courthouse is your case?**
  #    % if cook_district == "15":
  #    First Municipal District, Daley Center, 50 W. Washington Street, Chicago
  #    % elif cook_district == "16":
  #    Second Municipal District, 5600 Old Orchard Road, Skokie
  #    % elif cook_district == "17":
  #    Third Municipal District, 2121 Euclid Avenue, Rolling Meadows
  #    % elif cook_district == "18":
  #    Fourth Municipal District, 1500 Maybrook Drive, Maywood
  #    % elif cook_district == "19":
  #    Fifth Municipal District, 10220 S. 76th Avenue, Bridgeview
  #    % elif cook_district == "20":
  #    Sixth Municipal District, 16501 South Kedzie Parkway, Markham
  #    % endif
  #  show if: trial_court_index == -1 and child_notice_would_be_published == True and (any_risk == True or request_waiver == False)
  - Edit: e_signature
    button: |
      **Do you want to add your e-signature to your forms?**
      ${word(yesno(e_signature))}